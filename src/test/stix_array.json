[{
        "_id": "course-of-action--4f170666-7edb-4489-85c2-9affa28a72e0",
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "course-of-action",
            "id": "course-of-action--4f170666-7edb-4489-85c2-9affa28a72e0",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-12-14T16:55:59.600Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": ".bash_profile and .bashrc Mitigation",
            "description": "Making these files immutable and only changeable by certain administrators will limit the ability for adversaries to easily create user level persistence.",
            "external_references": [{
                "external_id": "T1156",
                "url": "https://attack.mitre.org/wiki/Technique/T1156",
                "source_name": "mitre-attack"
            }]
        },
        "__v": 0
    },
    {
        "_id": "attack-pattern--01df3350-ce05-4bdf-bdf8-0a919a66d4a8",
        "extendedProperties": {
            "x_mitre_data_sources": ["File monitoring", "Process Monitoring", "Process command-line parameters", "Process use of network"],
            "x_mitre_permissions_required": ["User", "Administrator"],
            "x_mitre_platforms": ["Linux", "MacOS", "OS X"]
        },
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "attack-pattern",
            "id": "attack-pattern--01df3350-ce05-4bdf-bdf8-0a919a66d4a8",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-12-14T16:46:06.044Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": ".bash_profile and .bashrc",
            "description": "\u003ccode\u003e~/.bash_profile\u003c/code\u003e and \u003ccode\u003e~/.bashrc\u003c/code\u003e are executed in a user's context when a new shell opens or when a user logs in so that their environment is set correctly. \u003ccode\u003e~/.bash_profile\u003c/code\u003e is executed for login shells and \u003ccode\u003e~/.bashrc\u003c/code\u003e is executed for interactive non-login shells. This means that when a user logs in (via username and password) to the console (either locally or remotely via something like SSH), \u003ccode\u003e~/.bash_profile\u003c/code\u003e is executed before the initial command prompt is returned to the user. After that, every time a new shell is opened, \u003ccode\u003e~/.bashrc\u003c/code\u003e is executed. This allows users more fine grained control over when they want certain commands executed.\n\nMac's Terminal.app is a little different in that it runs a login shell by default each time a new terminal window is opened, thus calling \u003ccode\u003e~/.bash_profile\u003c/code\u003e each time instead of \u003ccode\u003e~/.bashrc\u003c/code\u003e.\n\nThese files are meant to be written to by the local user to configure their own environment; however, adversaries can also insert code into these files to gain persistence each time a user logs in or opens a new shell.\n\nDetection: While users may customize their \u003ccode\u003e~/.bashrc\u003c/code\u003e and \u003ccode\u003e~/.bash_profile\u003c/code\u003e files , there are only certain types of commands that typically appear in these files. Monitor for abnormal commands such as execution of unknown programs, opening network sockets, or reaching out across the network when user profiles are loaded during the login process.\n\nPlatforms: Linux, MacOS, OS X\n\nData Sources: File monitoring, Process Monitoring, Process command-line parameters, Process use of network\n\nPermissions Required: User, Administrator",
            "kill_chain_phases": [{
                "phase_name": "persistence",
                "kill_chain_name": "mitre-attack"
            }],
            "external_references": [{
                "external_id": "T1156",
                "url": "https://attack.mitre.org/wiki/Technique/T1156",
                "source_name": "mitre-attack"
            }],
            "object_marking_refs": ["marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"]
        },
        "__v": 0
    },
    {
        "_id": "course-of-action--c61fee9f-16fb-4f8c-bbf0-869093fcd4a6",
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "course-of-action",
            "id": "course-of-action--c61fee9f-16fb-4f8c-bbf0-869093fcd4a6",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-12-14T16:55:59.600Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Access Token Manipulation Mitigation",
            "description": "Access tokens are an integral part of the security system within Windows and cannot be turned off.  However, an attacker must already have administrator level access on the local system to make full use of this technique; be sure to restrict users and accounts to the least privileges they require to do their job.\n\nAny user can also spoof access tokens if they have legitimate credentials.  Follow mitigation guidelines for preventing adversary use of Valid Accounts.\n\nAlso limit opportunities for adversaries to increase privileges by limiting Privilege Escalation opportunities.",
            "external_references": [{
                "external_id": "T1134",
                "url": "https://attack.mitre.org/wiki/Technique/T1134",
                "source_name": "mitre-attack"
            }]
        },
        "__v": 0
    },
    {
        "_id": "attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48",
        "extendedProperties": {
            "x_mitre_contributors": ["Tom Ueltschi @c_APT_ure"],
            "x_mitre_effective_permissions": ["SYSTEM"],
            "x_mitre_permissions_required": ["User", "Administrator"],
            "x_mitre_platforms": ["Windows Server 2003", "Windows Server 2008", "Windows Server 2012", "Windows XP", "Windows 7", "Windows 8", "Windows Server 2003 R2", "Windows Server 2008 R2", "Windows Server 2012 R2", "Windows Vista", "Windows 8.1", "Windows 10"]
        },
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "attack-pattern",
            "id": "attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-12-14T16:46:06.044Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Access Token Manipulation",
            "description": "Windows uses access tokens to determine the ownership of a running process.  A user can manipulate access tokens to make a running process appear as though it belongs to someone other than the user that started the process.  When this occurs, the process also takes on the security context associated with the new token.  For example, Microsoft promotes the use of access tokens as a security best practice.  Administrators should log in as a standard user but run their tools with administrator privileges using the built-in access token manipulation command \u003ccode\u003erunas\u003c/code\u003e.  (Citation: Microsoft runas)\n  \nAdversaries may use access tokens to operate under a different user or system security context to perform actions and evade detection.   An adversary can use built-in Windows API functions to copy access tokens from existing processes; this is known as token stealing.  An adversary must already be in a privileged user context (i.e. administrator) to steal a token.  However, adversaries commonly use token stealing to elevate their security context from the administrator level to the SYSTEM level. (Citation: Pentestlab Token Manipulation)\n\nAdversaries can also create spoofed access tokens if they know the credentials of a user.  Any standard user can use the \u003ccode\u003erunas\u003c/code\u003e command, and the Windows API functions, to do this; it does not require access to an administrator account.\n\nLastly, an adversary can use a spoofed token to authenticate to a remote system as the account for that token if the account has appropriate permissions on the remote system.\n\nMetasploit’s Meterpreter payload allows arbitrary token stealing and uses token stealing to escalate privileges.  (Citation: Metasploit access token)  The Cobalt Strike beacon payload allows arbitrary token stealing and can also create tokens.  (Citation: Cobalt Strike Access Token)\n\nDetection: If an adversary is using a standard command-line shell, analysts can detect token manipulation by auditing command-line activity.  Specifically, analysts should look for use of the \u003ccode\u003erunas\u003c/code\u003e command. Detailed command-line logging is not enabled by default in Windows. (Citation: Microsoft Command-line Logging)\n\nIf an adversary is using a payload that calls the Windows token APIs directly, analysts can detect token manipulation only through careful analysis of user network activity, examination of running processes, and correlation with other endpoint and network behavior.  \n\nThere are many Windows API calls a payload can take advantage of to manipulate access tokens (e.g., \u003ccode\u003eLogonUser\u003c/code\u003e (Citation: Microsoft LogonUser), \u003ccode\u003eDuplicateTokenEx\u003c/code\u003e (Citation: Microsoft DuplicateTokenEx), and \u003ccode\u003eImpersonateLoggedOnUser\u003c/code\u003e (Citation: Microsoft ImpersonateLoggedOnUser)).  Please see the referenced Windows API pages for more information.\n\nPlatforms: Windows Server 2003, Windows Server 2008, Windows Server 2012, Windows XP, Windows 7, Windows 8, Windows Server 2003 R2, Windows Server 2008 R2, Windows Server 2012 R2, Windows Vista, Windows 8.1, Windows 10\n\nEffective Permissions: SYSTEM\n\nPermissions Required: User, Administrator\n\nContributors: Tom Ueltschi @c_APT_ure",
            "kill_chain_phases": [{
                "phase_name": "defense-evasion",
                "kill_chain_name": "mitre-attack"
            }, {
                "phase_name": "privilege-escalation",
                "kill_chain_name": "mitre-attack"
            }],
            "external_references": [{
                "external_id": "T1134",
                "url": "https://attack.mitre.org/wiki/Technique/T1134",
                "source_name": "mitre-attack"
            }, {
                "url": "https://technet.microsoft.com/en-us/library/bb490994.aspx",
                "description": "Microsoft TechNet. (n.d.). Runas. Retrieved April 21, 2017.",
                "source_name": "Microsoft runas"
            }, {
                "url": "https://pentestlab.blog/2017/04/03/token-manipulation/",
                "description": "netbiosX. (2017, April 3). Token Manipulation. Retrieved April 21, 2017.",
                "source_name": "Pentestlab Token Manipulation"
            }, {
                "url": "https://www.offensive-security.com/metasploit-unleashed/fun-incognito/",
                "description": "Offensive Security. (n.d.). What is Incognito. Retrieved April 21, 2017.",
                "source_name": "Metasploit access token"
            }, {
                "url": "https://blog.cobaltstrike.com/2015/12/16/windows-access-tokens-and-alternate-credentials/",
                "description": "Mudge, R. (n.d.). Windows Access Tokens and Alternate Credentials. Retrieved April 21, 2017.",
                "source_name": "Cobalt Strike Access Token"
            }, {
                "url": "https://technet.microsoft.com/en-us/windows-server-docs/identity/ad-ds/manage/component-updates/command-line-process-auditing",
                "description": "Mathers, B. (2017, March 7). Command line process auditing. Retrieved April 21, 2017.",
                "source_name": "Microsoft Command-line Logging"
            }, {
                "url": "https://msdn.microsoft.com/en-us/library/windows/desktop/aa378184(v=vs.85).aspx",
                "description": "Microsoft TechNet. (n.d.).  Retrieved April 25, 2017.",
                "source_name": "Microsoft LogonUser"
            }, {
                "url": "https://msdn.microsoft.com/en-us/library/windows/desktop/aa446617(v=vs.85).aspx",
                "description": "Microsoft TechNet. (n.d.).  Retrieved April 25, 2017.",
                "source_name": "Microsoft DuplicateTokenEx"
            }, {
                "url": "https://msdn.microsoft.com/en-us/library/windows/desktop/aa378612(v=vs.85).aspx",
                "description": "Microsoft TechNet. (n.d.).  Retrieved April 25, 2017.",
                "source_name": "Microsoft ImpersonateLoggedOnUser"
            }],
            "object_marking_refs": ["marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"]
        },
        "__v": 0
    },
    {
        "_id": "course-of-action--c085476e-1964-4d7f-86e1-d8657a7741e8",
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "course-of-action",
            "id": "course-of-action--c085476e-1964-4d7f-86e1-d8657a7741e8",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-12-14T16:55:59.600Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Accessibility Features Mitigation",
            "description": "To use this technique remotely, an adversary must use it in conjunction with RDP. Ensure that Network Level Authentication is enabled to force the remote desktop session to authenticate before the session is created and the login screen displayed. It is enabled by default on Windows Vista and later. (Citation: TechNet RDP NLA)\n\nIf possible, use a Remote Desktop Gateway to manage connections and security configuration of RDP within a network. (Citation: TechNet RDP Gateway)\n\nIdentify and block potentially malicious software that may be executed by an adversary with this technique by using whitelisting (Citation: Beechey 2010) tools, like AppLocker, (Citation: Windows Commands JPCERT) (Citation: NSA MS AppLocker) or Software Restriction Policies (Citation: Corio 2008) where appropriate. (Citation: TechNet Applocker vs SRP)",
            "external_references": [{
                "external_id": "T1015",
                "url": "https://attack.mitre.org/wiki/Technique/T1015",
                "source_name": "mitre-attack"
            }, {
                "url": "https://technet.microsoft.com/en-us/library/cc732713.aspx",
                "description": "Microsoft. (n.d.). Configure Network Level Authentication for Remote Desktop Services Connections. Retrieved June 6, 2016.",
                "source_name": "TechNet RDP NLA"
            }, {
                "url": "https://technet.microsoft.com/en-us/library/cc731150.aspx",
                "description": "Microsoft. (n.d.). Overview of Remote Desktop Gateway. Retrieved June 6, 2016.",
                "source_name": "TechNet RDP Gateway"
            }, {
                "url": "http://www.sans.org/reading-room/whitepapers/application/application-whitelisting-panacea-propaganda-33599",
                "description": "Beechey, J. (2010, December). Application Whitelisting: Panacea or Propaganda?. Retrieved November 18, 2014.",
                "source_name": "Beechey 2010"
            }, {
                "url": "http://blog.jpcert.or.jp/2016/01/windows-commands-abused-by-attackers.html",
                "description": "Tomonaga, S. (2016, January 26). Windows Commands Abused by Attackers. Retrieved February 2, 2016.",
                "source_name": "Windows Commands JPCERT"
            }, {
                "url": "https://www.iad.gov/iad/library/ia-guidance/tech-briefs/application-whitelisting-using-microsoft-applocker.cfm",
                "description": "NSA Information Assurance Directorate. (2014, August). Application Whitelisting Using Microsoft AppLocker. Retrieved March 31, 2016.",
                "source_name": "NSA MS AppLocker"
            }, {
                "url": "http://technet.microsoft.com/en-us/magazine/2008.06.srp.aspx",
                "description": "Corio, C., \u0026 Sayana, D. P. (2008, June). Application Lockdown with Software Restriction Policies. Retrieved November 18, 2014.",
                "source_name": "Corio 2008"
            }, {
                "url": "https://technet.microsoft.com/en-us/library/ee791851.aspx",
                "description": "Microsoft. (2012, June 27). Using Software Restriction Policies and AppLocker Policies. Retrieved April 7, 2016.",
                "source_name": "TechNet Applocker vs SRP"
            }]
        },
        "__v": 0
    },
    {
        "_id": "attack-pattern--9b99b83a-1aac-4e29-b975-b374950551a3",
        "extendedProperties": {
            "x_mitre_contributors": ["Paul Speulstra, AECOM Global Security Operations Center"],
            "x_mitre_data_sources": ["Windows Registry", "File monitoring", "Process monitoring"],
            "x_mitre_effective_permissions": ["SYSTEM"],
            "x_mitre_platforms": ["Windows Server 2003", "Windows Server 2008", "Windows Server 2012", "Windows XP", "Windows 7", "Windows 8", "Windows Server 2003 R2", "Windows Server 2008 R2", "Windows Server 2012 R2", "Windows Vista", "Windows 8.1", "Windows 10"],
            "x_mitre_permissions_required": ["Administrator"]
        },
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "attack-pattern",
            "id": "attack-pattern--9b99b83a-1aac-4e29-b975-b374950551a3",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-05-31T21:30:26.946Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Accessibility Features",
            "description": "Windows contains accessibility features that may be launched with a key combination before a user has logged in (for example, when the user is on the Windows logon screen). An adversary can modify the way these programs are launched to get a command prompt or backdoor without logging in to the system.\n\nTwo common accessibility programs are \u003ccode\u003eC:\\Windows\\System32\\sethc.exe\u003c/code\u003e, launched when the shift key is pressed five times and \u003ccode\u003eC:\\Windows\\System32\\utilman.exe\u003c/code\u003e, launched when the Windows + U key combination is pressed. The sethc.exe program is often referred to as \"sticky keys\", and has been used by adversaries for unauthenticated access through a remote desktop login screen. (Citation: FireEye Hikit Rootkit)\n\nDepending on the version of Windows, an adversary may take advantage of these features in different ways because of code integrity enhancements. In newer versions of Windows, the replaced binary needs to be digitally signed for x64 systems, the binary must reside in \u003ccode\u003e%systemdir%\\\u003c/code\u003e, and it must be protected by Windows File or Resource Protection (WFP/WRP). (Citation: DEFCON2016 Sticky Keys) The debugger method was likely discovered as a potential workaround because it does not require the corresponding accessibility feature binary to be replaced. Examples for both methods:\n\nFor simple binary replacement on Windows XP and later as well as and Windows Server 2003/R2 and later, for example, the program (e.g., \u003ccode\u003eC:\\Windows\\System32\\utilman.exe\u003c/code\u003e) may be replaced with \"cmd.exe\" (or another program that provides backdoor access). Subsequently, pressing the appropriate key combination at the login screen while sitting at the keyboard or when connected over Remote Desktop Protocol will cause the replaced file to be executed with SYSTEM privileges. (Citation: Tilbury 2014)\n\nFor the debugger method on Windows Vista and later as well as Windows Server 2008 and later, for example, a Registry key may be modified that configures \"cmd.exe,\" or another program that provides backdoor access, as a \"debugger\" for the accessibility program (e.g., \"utilman.exe\"). After the Registry is modified, pressing the appropriate key combination at the login screen while at the keyboard or when connected with RDP will cause the \"debugger\" program to be executed with SYSTEM privileges. (Citation: Tilbury 2014)\n\nOther accessibility features exist that may also be leveraged in a similar fashion: (Citation: DEFCON2016 Sticky Keys)\n\n*On-Screen Keyboard: \u003ccode\u003eC:\\Windows\\System32\\osk.exe\u003c/code\u003e\n*Magnifier: \u003ccode\u003eC:\\Windows\\System32\\Magnify.exe\u003c/code\u003e\n*Narrator: \u003ccode\u003eC:\\Windows\\System32\\Narrator.exe\u003c/code\u003e\n*Display Switcher: \u003ccode\u003eC:\\Windows\\System32\\DisplaySwitch.exe\u003c/code\u003e\n*App Switcher: \u003ccode\u003eC:\\Windows\\System32\\AtBroker.exe\u003c/code\u003e\n\nDetection: Changes to accessibility utility binaries or binary paths that do not correlate with known software, patch cycles, etc., are suspicious. Command line invocation of tools capable of modifying the Registry for associated keys are also suspicious. Utility arguments and the binaries themselves should be monitored for changes. Monitor Registry keys within \u003ccode\u003eHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\u003c/code\u003e.\n\nPlatforms: Windows Server 2003, Windows Server 2008, Windows Server 2012, Windows XP, Windows 7, Windows 8, Windows Server 2003 R2, Windows Server 2008 R2, Windows Server 2012 R2, Windows Vista, Windows 8.1, Windows 10\n\nData Sources: Windows Registry, File monitoring, Process monitoring\n\nEffective Permissions: SYSTEM\n\nPermissions Required: Administrator\n\nContributors: Paul Speulstra, AECOM Global Security Operations Center",
            "kill_chain_phases": [{
                "phase_name": "persistence",
                "kill_chain_name": "mitre-attack"
            }, {
                "phase_name": "privilege-escalation",
                "kill_chain_name": "mitre-attack"
            }],
            "external_references": [{
                "external_id": "T1015",
                "url": "https://attack.mitre.org/wiki/Technique/T1015",
                "source_name": "mitre-attack"
            }, {
                "url": "https://www.fireeye.com/blog/threat-research/2012/08/hikit-rootkit-advanced-persistent-attack-techniques-part-1.html",
                "description": "Glyer, C., Kazanciyan, R. (2012, August 20). THE “HIKIT” ROOTKIT: ADVANCED AND PERSISTENT ATTACK TECHNIQUES (PART 1). Retrieved June 6, 2016.",
                "source_name": "FireEye Hikit Rootkit"
            }, {
                "url": "https://www.slideshare.net/DennisMaldonado5/sticky-keys-to-the-kingdom",
                "description": "Maldonado, D., McGuffin, T. (2016, August 6). Sticky Keys to the Kingdom. Retrieved July 5, 2017.",
                "source_name": "DEFCON2016 Sticky Keys"
            }, {
                "url": "http://blog.crowdstrike.com/registry-analysis-with-crowdresponse/",
                "description": "Tilbury, C. (2014, August 28). Registry Analysis with CrowdResponse. Retrieved November 12, 2014.",
                "source_name": "Tilbury 2014"
            }],
            "object_marking_refs": ["marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"]
        },
        "__v": 0
    },
    {
        "_id": "course-of-action--5c49bc54-9929-48ca-b581-7018219b5a97",
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "course-of-action",
            "id": "course-of-action--5c49bc54-9929-48ca-b581-7018219b5a97",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-12-14T16:55:59.600Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Account Discovery Mitigation",
            "description": "Identify unnecessary system utilities or potentially malicious software that may be used to acquire information about system and domain accounts, and audit and/or block them by using whitelisting (Citation: Beechey 2010) tools, like AppLocker, (Citation: Windows Commands JPCERT) (Citation: NSA MS AppLocker) or Software Restriction Policies (Citation: Corio 2008) where appropriate. (Citation: TechNet Applocker vs SRP)",
            "external_references": [{
                "external_id": "T1087",
                "url": "https://attack.mitre.org/wiki/Technique/T1087",
                "source_name": "mitre-attack"
            }, {
                "url": "http://www.sans.org/reading-room/whitepapers/application/application-whitelisting-panacea-propaganda-33599",
                "description": "Beechey, J. (2010, December). Application Whitelisting: Panacea or Propaganda?. Retrieved November 18, 2014.",
                "source_name": "Beechey 2010"
            }, {
                "url": "http://blog.jpcert.or.jp/2016/01/windows-commands-abused-by-attackers.html",
                "description": "Tomonaga, S. (2016, January 26). Windows Commands Abused by Attackers. Retrieved February 2, 2016.",
                "source_name": "Windows Commands JPCERT"
            }, {
                "url": "https://www.iad.gov/iad/library/ia-guidance/tech-briefs/application-whitelisting-using-microsoft-applocker.cfm",
                "description": "NSA Information Assurance Directorate. (2014, August). Application Whitelisting Using Microsoft AppLocker. Retrieved March 31, 2016.",
                "source_name": "NSA MS AppLocker"
            }, {
                "url": "http://technet.microsoft.com/en-us/magazine/2008.06.srp.aspx",
                "description": "Corio, C., \u0026 Sayana, D. P. (2008, June). Application Lockdown with Software Restriction Policies. Retrieved November 18, 2014.",
                "source_name": "Corio 2008"
            }, {
                "url": "https://technet.microsoft.com/en-us/library/ee791851.aspx",
                "description": "Microsoft. (2012, June 27). Using Software Restriction Policies and AppLocker Policies. Retrieved April 7, 2016.",
                "source_name": "TechNet Applocker vs SRP"
            }]
        },
        "__v": 0
    },
    {
        "_id": "course-of-action--fdb1ae84-7b00-4d3d-b7dc-c774beef6425",
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "course-of-action",
            "id": "course-of-action--fdb1ae84-7b00-4d3d-b7dc-c774beef6425",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-12-14T16:55:59.600Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Account Manipulation Mitigation",
            "description": "Use multifactor authentication. Follow guidelines to prevent or limit adversary access to Valid Accounts.\n\nProtect domain controllers by ensuring proper security configuration for critical servers. Configure access controls and firewalls to limit access to these systems. Do not allow domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.",
            "external_references": [{
                "external_id": "T1098",
                "url": "https://attack.mitre.org/wiki/Technique/T1098",
                "source_name": "mitre-attack"
            }]
        },
        "__v": 0
    },
    {
        "_id": "attack-pattern--a10641f4-87b4-45a3-a906-92a149cb2c27",
        "extendedProperties": {
            "x_mitre_data_sources": ["Authentication logs", "API monitoring", "Windows event logs"],
            "x_mitre_platforms": ["Windows Server 2003", "Windows Server 2008", "Windows Server 2012", "Windows XP", "Windows 7", "Windows 8", "Windows Server 2003 R2", "Windows Server 2008 R2", "Windows Server 2012 R2", "Windows Vista", "Windows 8.1", "Windows 10"],
            "x_mitre_permissions_required": ["Administrator"]
        },
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "attack-pattern",
            "id": "attack-pattern--a10641f4-87b4-45a3-a906-92a149cb2c27",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-05-31T21:31:12.196Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Account Manipulation",
            "description": "Account manipulation may aid adversaries in maintaining access to credentials and certain permission levels within an environment. Manipulation could consist of modifying permissions, adding or changing permission groups, modifying account settings, or modifying how authentication is performed. In order to create or manipulate accounts, the adversary must already have sufficient permissions on systems or the domain.\n\nDetection: Collect events that correlate with changes to account objects on systems and the domain, such as event ID 4738. (Citation: Microsoft User Modified Event) Monitor for modification of accounts in correlation with other suspicious activity. Changes may occur at unusual times or from unusual systems.\n\nUse of credentials may also occur at unusual times or to unusual systems or services and may correlate with other suspicious activity.\n\nPlatforms: Windows Server 2003, Windows Server 2008, Windows Server 2012, Windows XP, Windows 7, Windows 8, Windows Server 2003 R2, Windows Server 2008 R2, Windows Server 2012 R2, Windows Vista, Windows 8.1, Windows 10\n\nData Sources: Authentication logs, API monitoring, Windows event logs\n\nPermissions Required: Administrator",
            "kill_chain_phases": [{
                "phase_name": "credential-access",
                "kill_chain_name": "mitre-attack"
            }],
            "external_references": [{
                "external_id": "T1098",
                "url": "https://attack.mitre.org/wiki/Technique/T1098",
                "source_name": "mitre-attack"
            }, {
                "url": "https://docs.microsoft.com/windows/device-security/auditing/event-4738",
                "description": "Lich, B., Miroshnikov, A. (2017, April 5). 4738(S): A user account was changed. Retrieved June 30, 2017.",
                "source_name": "Microsoft User Modified Event"
            }],
            "object_marking_refs": ["marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"]
        },
        "__v": 0
    },
    {
        "_id": "attack-pattern--72b74d71-8169-42aa-92e0-e7b04b9f5a08",
        "extendedProperties": {
            "x_mitre_data_sources": ["API monitoring", "Process command-line parameters", "Process monitoring"],
            "x_mitre_permissions_required": ["User"],
            "x_mitre_platforms": ["Windows Server 2003", "Windows Server 2008", "Windows Server 2012", "Windows XP", "Windows 7", "Windows 8", "Windows Server 2003 R2", "Windows Server 2008 R2", "Windows Server 2012 R2", "Windows Vista", "Windows 8.1", "Linux", "Windows 10", "MacOS", "OS X"]
        },
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "attack-pattern",
            "id": "attack-pattern--72b74d71-8169-42aa-92e0-e7b04b9f5a08",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-05-31T21:31:06.988Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Account Discovery",
            "description": "Adversaries may attempt to get a listing of local system or domain accounts. \n\n===Windows===\n\nExample commands that can acquire this information are \u003ccode\u003enet user\u003c/code\u003e, \u003ccode\u003enet group \u003cgroupname\u003e\u003c/code\u003e, and \u003ccode\u003enet localgroup \u003cgroupname\u003e\u003c/code\u003e using the Net utility or through use of dsquery. If adversaries attempt to identify the primary user, currently logged in user, or set of users that commonly uses a system, System Owner/User Discovery may apply.\n\n===Mac===\n\nOn Mac, groups can be enumerated through the \u003ccode\u003egroups\u003c/code\u003e and \u003ccode\u003eid\u003c/code\u003e commands. In mac specifically, \u003ccode\u003edscl . list /Groups\u003c/code\u003e and \u003ccode\u003edscacheutil -q group\u003c/code\u003e can also be used to enumerate groups and users.\n\n===Linux===\n\nOn Linux, local users can be enumerated through the use of the \u003ccode\u003e/etc/passwd\u003c/code\u003e file which is world readable. In mac, this same file is only used in single-user mode in addition to the \u003ccode\u003e/etc/master.passwd\u003c/code\u003e file.\n\nAlso, groups can be enumerated through the \u003ccode\u003egroups\u003c/code\u003e and \u003ccode\u003eid\u003c/code\u003e commands. In mac specifically, \u003ccode\u003edscl . list /Groups\u003c/code\u003e and \u003ccode\u003edscacheutil -q group\u003c/code\u003e can also be used to enumerate groups and users.\n\nDetection: System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nPlatforms: Windows Server 2003, Windows Server 2008, Windows Server 2012, Windows XP, Windows 7, Windows 8, Windows Server 2003 R2, Windows Server 2008 R2, Windows Server 2012 R2, Windows Vista, Windows 8.1, Linux, Windows 10, MacOS, OS X\n\nData Sources: API monitoring, Process command-line parameters, Process monitoring\n\nPermissions Required: User",
            "kill_chain_phases": [{
                "phase_name": "discovery",
                "kill_chain_name": "mitre-attack"
            }],
            "external_references": [{
                "external_id": "T1087",
                "url": "https://attack.mitre.org/wiki/Technique/T1087",
                "source_name": "mitre-attack"
            }],
            "object_marking_refs": ["marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"]
        },
        "__v": 0
    },
    {
        "_id": "course-of-action--10571bf2-8073-4edf-a71c-23bad225532e",
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "course-of-action",
            "id": "course-of-action--10571bf2-8073-4edf-a71c-23bad225532e",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-12-14T16:55:59.600Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "AppInit DLLs Mitigation",
            "description": "Upgrade to Windows 8 or later and enable secure boot.\n\nIdentify and block potentially malicious software that may be executed through AppInit DLLs by using whitelisting (Citation: Beechey 2010) tools, like AppLocker, (Citation: Windows Commands JPCERT) (Citation: NSA MS AppLocker) that are capable of auditing and/or blocking unknown DLLs.",
            "external_references": [{
                "external_id": "T1103",
                "url": "https://attack.mitre.org/wiki/Technique/T1103",
                "source_name": "mitre-attack"
            }, {
                "url": "http://www.sans.org/reading-room/whitepapers/application/application-whitelisting-panacea-propaganda-33599",
                "description": "Beechey, J. (2010, December). Application Whitelisting: Panacea or Propaganda?. Retrieved November 18, 2014.",
                "source_name": "Beechey 2010"
            }, {
                "url": "http://blog.jpcert.or.jp/2016/01/windows-commands-abused-by-attackers.html",
                "description": "Tomonaga, S. (2016, January 26). Windows Commands Abused by Attackers. Retrieved February 2, 2016.",
                "source_name": "Windows Commands JPCERT"
            }, {
                "url": "https://www.iad.gov/iad/library/ia-guidance/tech-briefs/application-whitelisting-using-microsoft-applocker.cfm",
                "description": "NSA Information Assurance Directorate. (2014, August). Application Whitelisting Using Microsoft AppLocker. Retrieved March 31, 2016.",
                "source_name": "NSA MS AppLocker"
            }]
        },
        "__v": 0
    },
    {
        "_id": "attack-pattern--317fefa6-46c7-4062-adb6-2008cf6bcb41",
        "extendedProperties": {
            "x_mitre_data_sources": ["Loaded DLLs", "Process monitoring", "Windows Registry"],
            "x_mitre_effective_permissions": ["Administrator", "SYSTEM"],
            "x_mitre_platforms": ["Windows Server 2003", "Windows Server 2008", "Windows Server 2012", "Windows XP", "Windows 7", "Windows 8", "Windows Server 2003 R2", "Windows Server 2008 R2", "Windows Server 2012 R2", "Windows Vista", "Windows 8.1", "Windows 10"],
            "x_mitre_permissions_required": ["Administrator"],
            "x_mitre_system_requirements": ["Secure boot disabled on systems running Windows 8 and later"]
        },
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "attack-pattern",
            "id": "attack-pattern--317fefa6-46c7-4062-adb6-2008cf6bcb41",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-05-31T21:31:15.409Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "AppInit DLLs",
            "description": "DLLs that are specified in the AppInit_DLLs value in the Registry key \u003ccode\u003eHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\u003c/code\u003e are loaded by user32.dll into every process that loads user32.dll. In practice this is nearly every program. This value can be abused to obtain persistence by causing a DLL to be loaded into most processes on the computer. (Citation: AppInit Registry)\n\nThe AppInit DLL functionality is disabled in Windows 8 and later versions when secure boot is enabled. (Citation: AppInit Secure Boot)\n\nDetection: Monitor DLL loads by processes that load user32.dll and look for DLLs that are not recognized or not normally loaded into a process. Monitor the AppInit_DLLs Registry value for modifications that do not correlate with known software, patch cycles, etc. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current AppInit DLLs. (Citation: TechNet Autoruns) \n\nLook for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as making network connections for Command and Control, learning details about the environment through Discovery, and conducting Lateral Movement.\n\nPlatforms: Windows Server 2003, Windows Server 2008, Windows Server 2012, Windows XP, Windows 7, Windows 8, Windows Server 2003 R2, Windows Server 2008 R2, Windows Server 2012 R2, Windows Vista, Windows 8.1, Windows 10\n\nData Sources: Loaded DLLs, Process monitoring, Windows Registry\n\nEffective Permissions: Administrator, SYSTEM\n\nPermissions Required: Administrator\n\nSystem Requirements: Secure boot disabled on systems running Windows 8 and later",
            "kill_chain_phases": [{
                "phase_name": "persistence",
                "kill_chain_name": "mitre-attack"
            }, {
                "phase_name": "privilege-escalation",
                "kill_chain_name": "mitre-attack"
            }],
            "external_references": [{
                "external_id": "T1103",
                "url": "https://attack.mitre.org/wiki/Technique/T1103",
                "source_name": "mitre-attack"
            }, {
                "url": "https://support.microsoft.com/en-us/kb/197571",
                "description": "Microsoft. (2006, October). Working with the AppInit_DLLs registry value. Retrieved July 15, 2015.",
                "source_name": "AppInit Registry"
            }, {
                "url": "https://msdn.microsoft.com/en-us/library/dn280412",
                "description": "Microsoft. (n.d.). AppInit DLLs and Secure Boot. Retrieved July 15, 2015.",
                "source_name": "AppInit Secure Boot"
            }, {
                "url": "https://technet.microsoft.com/en-us/sysinternals/bb963902",
                "description": "Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.",
                "source_name": "TechNet Autoruns"
            }],
            "object_marking_refs": ["marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"]
        },
        "__v": 0
    },
    {
        "_id": "attack-pattern--5ad95aaa-49c1-4784-821d-2e83f47b079b",
        "extendedProperties": {
            "x_mitre_data_sources": ["API monitoring", "System calls", "Process Monitoring", "Process command-line parameters"],
            "x_mitre_permissions_required": ["User"],
            "x_mitre_platforms": ["MacOS", "OS X"],
            "x_mitre_remote_support": true
        },
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "attack-pattern",
            "id": "attack-pattern--5ad95aaa-49c1-4784-821d-2e83f47b079b",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-12-14T16:46:06.044Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "AppleScript",
            "description": "macOS and OS X applications send AppleEvent messages to each other for interprocess communications (IPC). These messages can be easily scripted with AppleScript for local or remote IPC. Osascript executes AppleScript and any other Open Scripting Architecture (OSA) language scripts. A list of OSA languages installed on a system can be found by using the \u003ccode\u003eosalang\u003c/code\u003e program.\nAppleEvent messages can be sent independently or as part of a script. These events can locate open windows, send keystrokes, and interact with almost any open application locally or remotely. \n\nAdversaries can use this to interact with open SSH connection, move to remote machines, and even present users with fake dialog boxes. These events cannot start applications remotely (they can start them locally though), but can interact with applications if they're already running remotely. Since this is a scripting language, it can be used to launch more common techniques as well such as a reverse shell via python  (Citation: Macro Malware Targets Macs). Scripts can be run from the command lie via \u003ccode\u003eosascript /path/to/script\u003c/code\u003e or \u003ccode\u003eosascript -e \"script here\"\u003c/code\u003e.\n\nDetection: Monitor for execution of AppleScript through osascript that may be related to other suspicious behavior occurring on the system.\n\nPlatforms: MacOS, OS X\n\nData Sources: API monitoring, System calls, Process Monitoring, Process command-line parameters\n\nPermissions Required: User\n\nRemote Support: Yes",
            "kill_chain_phases": [{
                "phase_name": "execution",
                "kill_chain_name": "mitre-attack"
            }, {
                "phase_name": "lateral-movement",
                "kill_chain_name": "mitre-attack"
            }],
            "external_references": [{
                "external_id": "T1155",
                "url": "https://attack.mitre.org/wiki/Technique/T1155",
                "source_name": "mitre-attack"
            }, {
                "url": "https://securingtomorrow.mcafee.com/mcafee-labs/macro-malware-targets-macs/",
                "description": "Yerko Grbic. (2017, February 14). Macro Malware Targets Macs. Retrieved July 8, 2017.",
                "source_name": "Macro Malware Targets Macs"
            }],
            "object_marking_refs": ["marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"]
        },
        "__v": 0
    },
    {
        "_id": "course-of-action--c88151a5-fe3f-4773-8147-d801587065a4",
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "course-of-action",
            "id": "course-of-action--c88151a5-fe3f-4773-8147-d801587065a4",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-12-14T16:55:59.600Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Application Deployment Software Mitigation",
            "description": "Grant access to application deployment systems only to a limited number of authorized administrators. Ensure proper system and access isolation for critical network systems through use of firewalls, account privilege separation, group policy, and multifactor authentication. Verify that account credentials that may be used to access deployment systems are unique and not used throughout the enterprise network. Patch deployment systems regularly to prevent potential remote access through Exploitation of Vulnerability. \n\nIf the application deployment system can be configured to deploy only signed binaries, then ensure that the trusted signing certificates are not co-located with the application deployment system and are instead located on a system that cannot be accessed remotely or to which remote access is tightly controlled.",
            "external_references": [{
                "external_id": "T1017",
                "url": "https://attack.mitre.org/wiki/Technique/T1017",
                "source_name": "mitre-attack"
            }]
        },
        "__v": 0
    },
    {
        "_id": "course-of-action--1e4ef2c7-ee96-4484-9baa-3b5777561301",
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "course-of-action",
            "id": "course-of-action--1e4ef2c7-ee96-4484-9baa-3b5777561301",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-12-14T16:55:59.600Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "AppleScript Mitigation",
            "description": "Require that all AppleScript be signed by a trusted developer ID before being executed - this will prevent random AppleScript code from executing.",
            "external_references": [{
                "external_id": "T1155",
                "url": "https://attack.mitre.org/wiki/Technique/T1155",
                "source_name": "mitre-attack"
            }]
        },
        "__v": 0
    },
    {
        "_id": "attack-pattern--327f3cc5-eea1-42d4-a6cd-ed34b7ce8f61",
        "extendedProperties": {
            "x_mitre_data_sources": ["File monitoring", "Process use of network", "Process monitoring"],
            "x_mitre_platforms": ["Windows Server 2003", "Windows Server 2008", "Windows Server 2012", "Windows XP", "Windows 7", "Windows 8", "Windows Server 2003 R2", "Windows Server 2008 R2", "Windows Server 2012 R2", "Windows Vista", "Windows 8.1", "Linux", "Windows 10", "MacOS", "OS X"],
            "x_mitre_system_requirements": ["Access to application deployment software (EPO, HPCA, Altiris, etc.)"]
        },
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "attack-pattern",
            "id": "attack-pattern--327f3cc5-eea1-42d4-a6cd-ed34b7ce8f61",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-05-31T21:30:27.755Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Application Deployment Software",
            "description": "Adversaries may deploy malicious software to systems within a network using application deployment systems employed by enterprise administrators. The permissions required for this action vary by system configuration; local credentials may be sufficient with direct access to the deployment server, or specific domain credentials may be required. However, the system may require an administrative account to log in or to perform software deployment.\n\nAccess to a network-wide or enterprise-wide software deployment system enables an adversary to have remote code execution on all systems that are connected to such a system. The access may be used to laterally move to systems, gather information, or cause a specific effect, such as wiping the hard drives on all endpoints.\n\nDetection: Monitor application deployments from a secondary system. Perform application deployment at regular times so that irregular deployment activity stands out. Monitor process activity that does not correlate to known good software. Monitor account login activity on the deployment system.\n\nPlatforms: Windows Server 2003, Windows Server 2008, Windows Server 2012, Windows XP, Windows 7, Windows 8, Windows Server 2003 R2, Windows Server 2008 R2, Windows Server 2012 R2, Windows Vista, Windows 8.1, Linux, Windows 10, MacOS, OS X\n\nData Sources: File monitoring, Process use of network, Process monitoring\n\nSystem Requirements: Access to application deployment software (EPO, HPCA, Altiris, etc.)",
            "kill_chain_phases": [{
                "phase_name": "lateral-movement",
                "kill_chain_name": "mitre-attack"
            }],
            "external_references": [{
                "external_id": "T1017",
                "url": "https://attack.mitre.org/wiki/Technique/T1017",
                "source_name": "mitre-attack"
            }],
            "object_marking_refs": ["marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"]
        },
        "__v": 0
    },
    {
        "_id": "course-of-action--cfc2d2fc-14ff-495f-bd99-585be47b804f",
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "course-of-action",
            "id": "course-of-action--cfc2d2fc-14ff-495f-bd99-585be47b804f",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-12-14T16:55:59.600Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Application Shimming Mitigation",
            "description": "There currently aren't a lot of ways to mitigate application shimming. Disabling the Shim Engine isn't recommended because Windows depends on shimming for interoperability and software may become unstable or not work. Microsoft released an optional patch update - KB3045645 - that will remove the \"auto-elevate\" flag within the sdbinst.exe. This will prevent use of application shimming to bypass UAC. \n\nChanging UAC settings to \"Always Notify\" will give the user more visibility when UAC elevation is requested, however, this option will not be popular among users due to the constant UAC interruptions.",
            "external_references": [{
                "external_id": "T1138",
                "url": "https://attack.mitre.org/wiki/Technique/T1138",
                "source_name": "mitre-attack"
            }]
        },
        "__v": 0
    },
    {
        "_id": "attack-pattern--7c93aa74-4bc0-4a9e-90ea-f25f86301566",
        "extendedProperties": {
            "x_mitre_data_sources": ["Loaded DLLs", "System calls", "Windows Registry", "Process Monitoring", "Process command-line parameters"],
            "x_mitre_platforms": ["Windows Server 2003", "Windows Server 2008", "Windows Server 2012", "Windows XP", "Windows 7", "Windows 8", "Windows Server 2003 R2", "Windows Server 2008 R2", "Windows Server 2012 R2", "Windows Vista", "Windows 8.1", "Windows 10"],
            "x_mitre_permissions_required": ["Administrator"],
            "x_mitre_remote_support": false
        },
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "attack-pattern",
            "id": "attack-pattern--7c93aa74-4bc0-4a9e-90ea-f25f86301566",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-12-14T16:46:06.044Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Application Shimming",
            "description": "The Microsoft Windows Application Compatibility Infrastructure/Framework (Application Shim) was created to allow compatibility of programs as Windows updates and changes its code. For example, application shimming feature that allows programs that were created for Windows XP to work with Windows 10. Within the framework, shims are created to act as a buffer between the program (or more specifically, the Import Address Table) and the Windows OS. When a program is executed, the shim cache is referenced to determine if the program requires the use of the shim database (.sdb). If so, the shim database uses API hooking to redirect the code as necessary in order to communicate with the OS. A list of all shims currently installed by the default Windows installer (sdbinst.exe) is kept in:\n\n* \u003ccode\u003e%WINDIR%\\AppPatch\\sysmain.sdb\u003c/code\u003e\n* \u003ccode\u003ehklm\\software\\microsoft\\windows nt\\currentversion\\appcompatflags\\installedsdb\u003c/code\u003e\n\nCustom databases are stored in:\n\n* \u003ccode\u003e%WINDIR%\\AppPatch\\custom \u0026 %WINDIR%\\AppPatch\\AppPatch64\\Custom\u003c/code\u003e\n* \u003ccode\u003ehklm\\software\\microsoft\\windows nt\\currentversion\\appcompatflags\\custom\u003c/code\u003e\n\nTo keep shims secure, Windows designed them to run in user mode so they cannot modify the kernel and you must have administrator privileges to install a shim. However, certain shims can be used to Bypass User Account Control (UAC) (RedirectEXE), inject DLLs into processes (InjectDll), and intercept memory addresses (GetProcAddress). Utilizing these shims, an adversary can perform several malicious acts, such as elevate privileges, install backdoors, disable defenses like Windows Defender, etc.\n\nDetection: There are several public tools available that will detect shims that are currently available (Citation: Black Hat 2015 App Shim):\n\n* Shim-Process-Scanner - checks memory of every running process for any Shim flags\n* Shim-Detector-Lite - detects installation of custom shim databases\n* Shim-Guard - monitors registry for any shim installations\n* ShimScanner - forensic tool to find active shims in memory\n* ShimCacheMem - Volatility plug-in that pulls shim cache from memory (note: shims are only cached after reboot)\n\nMonitor process execution for sdbinst.exe and command-line arguments for potential indications of application shim abuse.\n\nPlatforms: Windows Server 2003, Windows Server 2008, Windows Server 2012, Windows XP, Windows 7, Windows 8, Windows Server 2003 R2, Windows Server 2008 R2, Windows Server 2012 R2, Windows Vista, Windows 8.1, Windows 10\n\nData Sources: Loaded DLLs, System calls, Windows Registry, Process Monitoring, Process command-line parameters\n\nPermissions Required: Administrator\n\nRemote Support: No",
            "kill_chain_phases": [{
                "phase_name": "execution",
                "kill_chain_name": "mitre-attack"
            }, {
                "phase_name": "persistence",
                "kill_chain_name": "mitre-attack"
            }, {
                "phase_name": "privilege-escalation",
                "kill_chain_name": "mitre-attack"
            }],
            "external_references": [{
                "external_id": "T1138",
                "url": "https://attack.mitre.org/wiki/Technique/T1138",
                "source_name": "mitre-attack"
            }, {
                "url": "https://www.blackhat.com/docs/eu-15/materials/eu-15-Pierce-Defending-Against-Malicious-Application-Compatibility-Shims-wp.pdf",
                "description": "Pierce, Sean. (2015, November). Defending Against Malicious Application Compatibility Shims. Retrieved June 22, 2017.",
                "source_name": "Black Hat 2015 App Shim"
            }],
            "object_marking_refs": ["marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"]
        },
        "__v": 0
    },
    {
        "_id": "course-of-action--25d5e1d8-c6fb-4735-bc57-115a21222f4b",
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "course-of-action",
            "id": "course-of-action--25d5e1d8-c6fb-4735-bc57-115a21222f4b",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-12-14T16:55:59.600Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Application Window Discovery Mitigation",
            "description": "Identify unnecessary system utilities or potentially malicious software that may be used to acquire information, and audit and/or block them by using whitelisting (Citation: Beechey 2010) tools, like AppLocker, (Citation: Windows Commands JPCERT) (Citation: NSA MS AppLocker) or Software Restriction Policies (Citation: Corio 2008) where appropriate. (Citation: TechNet Applocker vs SRP)",
            "external_references": [{
                "external_id": "T1010",
                "url": "https://attack.mitre.org/wiki/Technique/T1010",
                "source_name": "mitre-attack"
            }, {
                "url": "http://www.sans.org/reading-room/whitepapers/application/application-whitelisting-panacea-propaganda-33599",
                "description": "Beechey, J. (2010, December). Application Whitelisting: Panacea or Propaganda?. Retrieved November 18, 2014.",
                "source_name": "Beechey 2010"
            }, {
                "url": "http://blog.jpcert.or.jp/2016/01/windows-commands-abused-by-attackers.html",
                "description": "Tomonaga, S. (2016, January 26). Windows Commands Abused by Attackers. Retrieved February 2, 2016.",
                "source_name": "Windows Commands JPCERT"
            }, {
                "url": "https://www.iad.gov/iad/library/ia-guidance/tech-briefs/application-whitelisting-using-microsoft-applocker.cfm",
                "description": "NSA Information Assurance Directorate. (2014, August). Application Whitelisting Using Microsoft AppLocker. Retrieved March 31, 2016.",
                "source_name": "NSA MS AppLocker"
            }, {
                "url": "http://technet.microsoft.com/en-us/magazine/2008.06.srp.aspx",
                "description": "Corio, C., \u0026 Sayana, D. P. (2008, June). Application Lockdown with Software Restriction Policies. Retrieved November 18, 2014.",
                "source_name": "Corio 2008"
            }, {
                "url": "https://technet.microsoft.com/en-us/library/ee791851.aspx",
                "description": "Microsoft. (2012, June 27). Using Software Restriction Policies and AppLocker Policies. Retrieved April 7, 2016.",
                "source_name": "TechNet Applocker vs SRP"
            }]
        },
        "__v": 0
    },
    {
        "_id": "attack-pattern--4ae4f953-fe58-4cc8-a327-33257e30a830",
        "extendedProperties": {
            "x_mitre_data_sources": ["API monitoring", "Process command-line parameters", "Process monitoring"],
            "x_mitre_permissions_required": ["User"],
            "x_mitre_platforms": ["Windows Server 2003", "Windows Server 2008", "Windows Server 2012", "Windows XP", "Windows 7", "Windows 8", "Windows Server 2003 R2", "Windows Server 2008 R2", "Windows Server 2012 R2", "Windows Vista", "Windows 8.1", "Windows 10", "MacOS", "OS X"]
        },
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "attack-pattern",
            "id": "attack-pattern--4ae4f953-fe58-4cc8-a327-33257e30a830",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-05-31T21:30:24.512Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Application Window Discovery",
            "description": "Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used or give context to information collected by a keylogger.\n\nIn Mac, this can be done natively with a small AppleScript script.\n\nDetection: System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nPlatforms: Windows Server 2003, Windows Server 2008, Windows Server 2012, Windows XP, Windows 7, Windows 8, Windows Server 2003 R2, Windows Server 2008 R2, Windows Server 2012 R2, Windows Vista, Windows 8.1, Windows 10, MacOS, OS X\n\nData Sources: API monitoring, Process command-line parameters, Process monitoring\n\nPermissions Required: User",
            "kill_chain_phases": [{
                "phase_name": "discovery",
                "kill_chain_name": "mitre-attack"
            }],
            "external_references": [{
                "external_id": "T1010",
                "url": "https://attack.mitre.org/wiki/Technique/T1010",
                "source_name": "mitre-attack"
            }],
            "object_marking_refs": ["marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"]
        },
        "__v": 0
    },
    {
        "_id": "course-of-action--16dd03c6-0dfb-4d77-89cd-9ff3ee6e533d",
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "course-of-action",
            "id": "course-of-action--16dd03c6-0dfb-4d77-89cd-9ff3ee6e533d",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-12-14T16:55:59.600Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Audio Capture Mitigation",
            "description": "Mitigating this technique specifically may be difficult as it requires fine-grained API control. Efforts should be focused on preventing unwanted or unknown code from executing on a system.\n\nIdentify and block potentially malicious software that may be used to record audio by using whitelisting (Citation: Beechey 2010) tools, like AppLocker, (Citation: Windows Commands JPCERT) (Citation: NSA MS AppLocker) or Software Restriction Policies (Citation: Corio 2008) where appropriate. (Citation: TechNet Applocker vs SRP)",
            "external_references": [{
                "external_id": "T1123",
                "url": "https://attack.mitre.org/wiki/Technique/T1123",
                "source_name": "mitre-attack"
            }, {
                "url": "http://www.sans.org/reading-room/whitepapers/application/application-whitelisting-panacea-propaganda-33599",
                "description": "Beechey, J. (2010, December). Application Whitelisting: Panacea or Propaganda?. Retrieved November 18, 2014.",
                "source_name": "Beechey 2010"
            }, {
                "url": "http://blog.jpcert.or.jp/2016/01/windows-commands-abused-by-attackers.html",
                "description": "Tomonaga, S. (2016, January 26). Windows Commands Abused by Attackers. Retrieved February 2, 2016.",
                "source_name": "Windows Commands JPCERT"
            }, {
                "url": "https://www.iad.gov/iad/library/ia-guidance/tech-briefs/application-whitelisting-using-microsoft-applocker.cfm",
                "description": "NSA Information Assurance Directorate. (2014, August). Application Whitelisting Using Microsoft AppLocker. Retrieved March 31, 2016.",
                "source_name": "NSA MS AppLocker"
            }, {
                "url": "http://technet.microsoft.com/en-us/magazine/2008.06.srp.aspx",
                "description": "Corio, C., \u0026 Sayana, D. P. (2008, June). Application Lockdown with Software Restriction Policies. Retrieved November 18, 2014.",
                "source_name": "Corio 2008"
            }, {
                "url": "https://technet.microsoft.com/en-us/library/ee791851.aspx",
                "description": "Microsoft. (2012, June 27). Using Software Restriction Policies and AppLocker Policies. Retrieved April 7, 2016.",
                "source_name": "TechNet Applocker vs SRP"
            }]
        },
        "__v": 0
    },
    {
        "_id": "attack-pattern--1035cdf2-3e5f-446f-a7a7-e8f6d7925967",
        "extendedProperties": {
            "x_mitre_data_sources": ["API monitoring", "Process monitoring", "File monitoring"],
            "x_mitre_permissions_required": ["User"],
            "x_mitre_platforms": ["Windows Server 2003", "Windows Server 2008", "Windows Server 2012", "Windows XP", "Windows 7", "Windows 8", "Windows Server 2003 R2", "Windows Server 2008 R2", "Windows Server 2012 R2", "Windows Vista", "Windows 8.1", "Linux", "Windows 10"]
        },
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "attack-pattern",
            "id": "attack-pattern--1035cdf2-3e5f-446f-a7a7-e8f6d7925967",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-05-31T21:31:34.528Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Audio Capture",
            "description": "An adversary can leverage a computer's peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information.\n\nMalware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture audio. Audio files may be written to disk and exfiltrated later.\n\nDetection: Detection of this technique may be difficult due to the various APIs that may be used. Telemetry data regarding API use may not be useful depending on how a system is normally used, but may provide context to other potentially malicious activity occurring on a system.\n\nBehavior that could indicate technique use include an unknown or unusual process accessing APIs associated with devices or software that interact with the microphone, recording devices, or recording software, and a process periodically writing files to disk that contain audio data.\n\nPlatforms: Windows Server 2003, Windows Server 2008, Windows Server 2012, Windows XP, Windows 7, Windows 8, Windows Server 2003 R2, Windows Server 2008 R2, Windows Server 2012 R2, Windows Vista, Windows 8.1, Linux, Windows 10\n\nData Sources: API monitoring, Process monitoring, File monitoring\n\nPermissions Required: User",
            "kill_chain_phases": [{
                "phase_name": "collection",
                "kill_chain_name": "mitre-attack"
            }],
            "external_references": [{
                "external_id": "T1123",
                "url": "https://attack.mitre.org/wiki/Technique/T1123",
                "source_name": "mitre-attack"
            }],
            "object_marking_refs": ["marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"]
        },
        "__v": 0
    },
    {
        "_id": "course-of-action--943d370b-2054-44df-8be2-ab4139bde1c5",
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "course-of-action",
            "id": "course-of-action--943d370b-2054-44df-8be2-ab4139bde1c5",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-12-14T16:55:59.600Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Authentication Package Mitigation",
            "description": "Windows 8.1, Windows Server 2012 R2, and later versions, may make LSA run as a Protected Process Light (PPL) by setting the Registry key \u003ccode\u003eHKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\RunAsPPL\u003c/code\u003e, which requires all DLLs loaded by LSA to be signed by Microsoft. (Citation: Graeber 2014) (Citation: Microsoft Configure LSA)",
            "external_references": [{
                "external_id": "T1131",
                "url": "https://attack.mitre.org/wiki/Technique/T1131",
                "source_name": "mitre-attack"
            }, {
                "url": "http://docplayer.net/20839173-Analysis-of-malicious-security-support-provider-dlls.html",
                "description": "Graeber, M. (2014, October). Analysis of Malicious Security Support Provider DLLs. Retrieved March 1, 2017.",
                "source_name": "Graeber 2014"
            }, {
                "url": "https://technet.microsoft.com/en-us/library/dn408187.aspx",
                "description": "Microsoft. (2013, July 31). Configuring Additional LSA Protection. Retrieved June 24, 2015.",
                "source_name": "Microsoft Configure LSA"
            }]
        },
        "__v": 0
    },
    {
        "_id": "attack-pattern--52d40641-c480-4ad5-81a3-c80ccaddf82d",
        "extendedProperties": {
            "x_mitre_data_sources": ["DLL monitoring", "Windows Registry", "Loaded DLLs"],
            "x_mitre_platforms": ["Windows Server 2003", "Windows Server 2008", "Windows Server 2012", "Windows XP", "Windows 7", "Windows 8", "Windows Server 2003 R2", "Windows Server 2008 R2", "Windows Server 2012 R2", "Windows Vista", "Windows 8.1", "Windows 10"],
            "x_mitre_permissions_required": ["Administrator"]
        },
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "attack-pattern",
            "id": "attack-pattern--52d40641-c480-4ad5-81a3-c80ccaddf82d",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-05-31T21:31:43.135Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Authentication Package",
            "description": "Windows Authentication Package DLLs are loaded by the Local Security Authority (LSA) process at system start. They provide support for multiple logon processes and multiple security protocols to the operating system. (Citation: MSDN Authentication Packages)\n\nAdversaries can use the autostart mechanism provided by LSA Authentication Packages for persistence by placing a reference to a binary in the Windows Registry location \u003ccode\u003eHKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\\u003c/code\u003e with the key value of \u003ccode\u003e\"Authentication Packages\"=\u003ctarget binary\u003e\u003c/code\u003e. The binary will then be executed by the system when the authentication packages are loaded.\n\nDetection: Monitor the Registry for changes to the LSA Registry keys. Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned DLLs try to load into the LSA by setting the Registry key \u003ccode\u003eHKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\LSASS.exe\u003c/code\u003e with AuditLevel = 8. (Citation: Graeber 2014) (Citation: Microsoft Configure LSA)\n\nPlatforms: Windows Server 2003, Windows Server 2008, Windows Server 2012, Windows XP, Windows 7, Windows 8, Windows Server 2003 R2, Windows Server 2008 R2, Windows Server 2012 R2, Windows Vista, Windows 8.1, Windows 10\n\nData Sources: DLL monitoring, Windows Registry, Loaded DLLs\n\nPermissions Required: Administrator",
            "kill_chain_phases": [{
                "phase_name": "persistence",
                "kill_chain_name": "mitre-attack"
            }],
            "external_references": [{
                "external_id": "T1131",
                "url": "https://attack.mitre.org/wiki/Technique/T1131",
                "source_name": "mitre-attack"
            }, {
                "url": "https://msdn.microsoft.com/library/windows/desktop/aa374733.aspx",
                "description": "Microsoft. (n.d.). Authentication Packages. Retrieved March 1, 2017.",
                "source_name": "MSDN Authentication Packages"
            }, {
                "url": "http://docplayer.net/20839173-Analysis-of-malicious-security-support-provider-dlls.html",
                "description": "Graeber, M. (2014, October). Analysis of Malicious Security Support Provider DLLs. Retrieved March 1, 2017.",
                "source_name": "Graeber 2014"
            }, {
                "url": "https://technet.microsoft.com/en-us/library/dn408187.aspx",
                "description": "Microsoft. (2013, July 31). Configuring Additional LSA Protection. Retrieved June 24, 2015.",
                "source_name": "Microsoft Configure LSA"
            }],
            "object_marking_refs": ["marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"]
        },
        "__v": 0
    },
    {
        "_id": "attack-pattern--30208d3e-0d6b-43c8-883e-44462a514619",
        "extendedProperties": {
            "x_mitre_data_sources": ["File monitoring", "Process command-line parameters", "Data loss prevention"],
            "x_mitre_permissions_required": ["User"],
            "x_mitre_platforms": ["Windows Server 2003", "Windows Server 2008", "Windows Server 2012", "Windows XP", "Windows 7", "Windows 8", "Windows Server 2003 R2", "Windows Server 2008 R2", "Windows Server 2012 R2", "Windows Vista", "Windows 8.1", "Linux", "Windows 10", "MacOS", "OS X"],
            "x_mitre_system_requirements": ["Permissions to access directories and files that store information of interest."]
        },
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "attack-pattern",
            "id": "attack-pattern--30208d3e-0d6b-43c8-883e-44462a514619",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-05-31T21:31:27.985Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Automated Collection",
            "description": "Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of Scripting to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals. This functionality could also be built into remote access tools. \n\nThis technique may incorporate use of other techniques such as File and Directory Discovery and Remote File Copy to identify and move files.\n\nDetection: Depending on the method used, actions could include common file system commands and parameters on the command-line interface within batch files or scripts. A sequence of actions like this may be unusual, depending on the system and network environment. Automated collection may occur along with other techniques such as Data Staged. As such, file access monitoring that shows an unusual process performing sequential file opens and potentially copy actions to another location on the file system for many files at once may indicate automated collection behavior. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.\n\nPlatforms: Windows Server 2003, Windows Server 2008, Windows Server 2012, Windows XP, Windows 7, Windows 8, Windows Server 2003 R2, Windows Server 2008 R2, Windows Server 2012 R2, Windows Vista, Windows 8.1, Linux, Windows 10, MacOS, OS X\n\nData Sources: File monitoring, Process command-line parameters, Data loss prevention\n\nPermissions Required: User\n\nSystem Requirements: Permissions to access directories and files that store information of interest.",
            "kill_chain_phases": [{
                "phase_name": "collection",
                "kill_chain_name": "mitre-attack"
            }],
            "external_references": [{
                "external_id": "T1119",
                "url": "https://attack.mitre.org/wiki/Technique/T1119",
                "source_name": "mitre-attack"
            }],
            "object_marking_refs": ["marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"]
        },
        "__v": 0
    },
    {
        "_id": "course-of-action--8bd1ae32-a686-48f4-a6f8-470287f76152",
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "course-of-action",
            "id": "course-of-action--8bd1ae32-a686-48f4-a6f8-470287f76152",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-12-14T16:55:59.600Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Automated Collection Mitigation",
            "description": "Encryption and off-system storage of sensitive information may be one way to mitigate collection of files, but may not stop an adversary from acquiring the information if an intrusion persists over a long period of time and the adversary is able to discover and access the data through other means. A keylogger installed on a system may be able to intercept passwords through Input Capture and be used to decrypt protected documents that an adversary may have collected. Strong passwords should be used to prevent offline cracking of encrypted documents through Brute Force techniques.\n\nIdentify unnecessary system utilities, third-party tools, or potentially malicious software that may be used to collect files and audit and/or block them by using whitelisting (Citation: Beechey 2010) tools, like AppLocker, (Citation: Windows Commands JPCERT) (Citation: NSA MS AppLocker) or Software Restriction Policies (Citation: Corio 2008) where appropriate. (Citation: TechNet Applocker vs SRP)",
            "external_references": [{
                "external_id": "T1119",
                "url": "https://attack.mitre.org/wiki/Technique/T1119",
                "source_name": "mitre-attack"
            }, {
                "url": "http://www.sans.org/reading-room/whitepapers/application/application-whitelisting-panacea-propaganda-33599",
                "description": "Beechey, J. (2010, December). Application Whitelisting: Panacea or Propaganda?. Retrieved November 18, 2014.",
                "source_name": "Beechey 2010"
            }, {
                "url": "http://blog.jpcert.or.jp/2016/01/windows-commands-abused-by-attackers.html",
                "description": "Tomonaga, S. (2016, January 26). Windows Commands Abused by Attackers. Retrieved February 2, 2016.",
                "source_name": "Windows Commands JPCERT"
            }, {
                "url": "https://www.iad.gov/iad/library/ia-guidance/tech-briefs/application-whitelisting-using-microsoft-applocker.cfm",
                "description": "NSA Information Assurance Directorate. (2014, August). Application Whitelisting Using Microsoft AppLocker. Retrieved March 31, 2016.",
                "source_name": "NSA MS AppLocker"
            }, {
                "url": "http://technet.microsoft.com/en-us/magazine/2008.06.srp.aspx",
                "description": "Corio, C., \u0026 Sayana, D. P. (2008, June). Application Lockdown with Software Restriction Policies. Retrieved November 18, 2014.",
                "source_name": "Corio 2008"
            }, {
                "url": "https://technet.microsoft.com/en-us/library/ee791851.aspx",
                "description": "Microsoft. (2012, June 27). Using Software Restriction Policies and AppLocker Policies. Retrieved April 7, 2016.",
                "source_name": "TechNet Applocker vs SRP"
            }]
        },
        "__v": 0
    },
    {
        "_id": "attack-pattern--774a3188-6ba9-4dc4-879d-d54ee48a5ce9",
        "extendedProperties": {
            "x_mitre_data_sources": ["File monitoring", "Process monitoring", "Process use of network"],
            "x_mitre_network_requirements": true,
            "x_mitre_platforms": ["Windows Server 2003", "Windows Server 2008", "Windows Server 2012", "Windows XP", "Windows 7", "Windows 8", "Windows Server 2003 R2", "Windows Server 2008 R2", "Windows Server 2012 R2", "Windows Vista", "Windows 8.1", "Linux", "Windows 10", "MacOS", "OS X"]
        },
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "attack-pattern",
            "id": "attack-pattern--774a3188-6ba9-4dc4-879d-d54ee48a5ce9",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-05-31T21:30:29.458Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Automated Exfiltration",
            "description": "Data, such as sensitive documents, may be exfiltrated through the use of automated processing or Scripting after being gathered during Collection. \n\nWhen automated exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as Exfiltration Over Command and Control Channel and Exfiltration Over Alternative Protocol.\n\nDetection: Monitor process file access patterns and network behavior. Unrecognized processes or scripts that appear to be traversing file systems and sending network traffic may be suspicious.\n\nPlatforms: Windows Server 2003, Windows Server 2008, Windows Server 2012, Windows XP, Windows 7, Windows 8, Windows Server 2003 R2, Windows Server 2008 R2, Windows Server 2012 R2, Windows Vista, Windows 8.1, Linux, Windows 10, MacOS, OS X\n\nData Sources: File monitoring, Process monitoring, Process use of network\n\nRequires Network: Yes",
            "kill_chain_phases": [{
                "phase_name": "exfiltration",
                "kill_chain_name": "mitre-attack"
            }],
            "external_references": [{
                "external_id": "T1020",
                "url": "https://attack.mitre.org/wiki/Technique/T1020",
                "source_name": "mitre-attack"
            }],
            "object_marking_refs": ["marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"]
        },
        "__v": 0
    },
    {
        "_id": "course-of-action--2497ac92-e751-4391-82c6-1b86e34d0294",
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "course-of-action",
            "id": "course-of-action--2497ac92-e751-4391-82c6-1b86e34d0294",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-12-14T16:55:59.600Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Automated Exfiltration Mitigation",
            "description": "Identify unnecessary system utilities, scripts, or potentially malicious software that may be used to transfer data outside of a network, and audit and/or block them by using whitelisting (Citation: Beechey 2010) tools, like AppLocker, (Citation: Windows Commands JPCERT) (Citation: NSA MS AppLocker) or Software Restriction Policies (Citation: Corio 2008) where appropriate. (Citation: TechNet Applocker vs SRP)",
            "external_references": [{
                "external_id": "T1020",
                "url": "https://attack.mitre.org/wiki/Technique/T1020",
                "source_name": "mitre-attack"
            }, {
                "url": "http://www.sans.org/reading-room/whitepapers/application/application-whitelisting-panacea-propaganda-33599",
                "description": "Beechey, J. (2010, December). Application Whitelisting: Panacea or Propaganda?. Retrieved November 18, 2014.",
                "source_name": "Beechey 2010"
            }, {
                "url": "http://blog.jpcert.or.jp/2016/01/windows-commands-abused-by-attackers.html",
                "description": "Tomonaga, S. (2016, January 26). Windows Commands Abused by Attackers. Retrieved February 2, 2016.",
                "source_name": "Windows Commands JPCERT"
            }, {
                "url": "https://www.iad.gov/iad/library/ia-guidance/tech-briefs/application-whitelisting-using-microsoft-applocker.cfm",
                "description": "NSA Information Assurance Directorate. (2014, August). Application Whitelisting Using Microsoft AppLocker. Retrieved March 31, 2016.",
                "source_name": "NSA MS AppLocker"
            }, {
                "url": "http://technet.microsoft.com/en-us/magazine/2008.06.srp.aspx",
                "description": "Corio, C., \u0026 Sayana, D. P. (2008, June). Application Lockdown with Software Restriction Policies. Retrieved November 18, 2014.",
                "source_name": "Corio 2008"
            }, {
                "url": "https://technet.microsoft.com/en-us/library/ee791851.aspx",
                "description": "Microsoft. (2012, June 27). Using Software Restriction Policies and AppLocker Policies. Retrieved April 7, 2016.",
                "source_name": "TechNet Applocker vs SRP"
            }]
        },
        "__v": 0
    },
    {
        "_id": "attack-pattern--44dca04b-808d-46ca-b25f-d85236d4b9f8",
        "extendedProperties": {
            "x_mitre_data_sources": ["File monitoring", "Process monitoring", "Process command-line parameters"],
            "x_mitre_permissions_required": ["User"],
            "x_mitre_platforms": ["Linux", "MacOS", "OS X"]
        },
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "attack-pattern",
            "id": "attack-pattern--44dca04b-808d-46ca-b25f-d85236d4b9f8",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-12-14T16:46:06.044Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Bash History",
            "description": "Bash keeps track of the commands users type on the command-line with the \"history\" utility. Once a user logs out, the history is flushed to the user’s \u003ccode\u003e.bash_history\u003c/code\u003e file. For each user, this file resides at the same location: \u003ccode\u003e~/.bash_history\u003c/code\u003e. Typically, this file keeps track of the user’s last 500 commands. Users often type usernames and passwords on the command-line as parameters to programs, which then get saved to this file when they log out. Attackers can abuse this by looking through the file for potential credentials. (Citation: External to DA, the OS X Way)\n\nDetection: Monitoring when the user's \u003ccode\u003e.bash_history\u003c/code\u003e is read can help alert to suspicious activity. While users do typically rely on their history of commands, they often access this history through other utilities like \"history\" instead of commands like \u003ccode\u003ecat ~/.bash_history\u003c/code\u003e.\n\nPlatforms: Linux, MacOS, OS X\n\nData Sources: File monitoring, Process monitoring, Process command-line parameters\n\nPermissions Required: User",
            "kill_chain_phases": [{
                "phase_name": "credential-access",
                "kill_chain_name": "mitre-attack"
            }],
            "external_references": [{
                "external_id": "T1139",
                "url": "https://attack.mitre.org/wiki/Technique/T1139",
                "source_name": "mitre-attack"
            }, {
                "url": "http://www.slideshare.net/StephanBorosh/external-to-da-the-os-x-way",
                "description": "Alex Rymdeko-Harvey, Steve Borosh. (2016, May 14). External to DA, the OS X Way. Retrieved July 3, 2017.",
                "source_name": "External to DA, the OS X Way"
            }],
            "object_marking_refs": ["marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"]
        },
        "__v": 0
    },
    {
        "_id": "course-of-action--ace4daee-f914-4707-be75-843f16da2edf",
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "course-of-action",
            "id": "course-of-action--ace4daee-f914-4707-be75-843f16da2edf",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-12-14T16:55:59.600Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Bash History Mitigation",
            "description": "There are multiple methods of preventing a user's command history from being flushed to their .bash_history file, including use of the following commands:\n\u003ccode\u003eset +o history\u003c/code\u003e and \u003ccode\u003eset -o history\u003c/code\u003e to start logging again;\n\u003ccode\u003eunset HISTFILE\u003c/code\u003e being added to a user's .bash_rc file; and\n\u003ccode\u003eln -s /dev/null ~/.bash_history\u003c/code\u003e to write commands to \u003ccode\u003e/dev/null\u003c/code\u003einstead.",
            "external_references": [{
                "external_id": "T1139",
                "url": "https://attack.mitre.org/wiki/Technique/T1139",
                "source_name": "mitre-attack"
            }]
        },
        "__v": 0
    },
    {
        "_id": "course-of-action--16a8ac85-a06f-460f-ad22-910167bd7332",
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "course-of-action",
            "id": "course-of-action--16a8ac85-a06f-460f-ad22-910167bd7332",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-12-14T16:55:59.600Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Binary Padding Mitigation",
            "description": "Identify potentially malicious software that may be executed from a padded or otherwise obfuscated binary, and audit and/or block it by using whitelisting (Citation: Beechey 2010) tools, like AppLocker, (Citation: Windows Commands JPCERT) (Citation: NSA MS AppLocker) or Software Restriction Policies (Citation: Corio 2008) where appropriate. (Citation: TechNet Applocker vs SRP)",
            "external_references": [{
                "external_id": "T1009",
                "url": "https://attack.mitre.org/wiki/Technique/T1009",
                "source_name": "mitre-attack"
            }, {
                "url": "http://www.sans.org/reading-room/whitepapers/application/application-whitelisting-panacea-propaganda-33599",
                "description": "Beechey, J. (2010, December). Application Whitelisting: Panacea or Propaganda?. Retrieved November 18, 2014.",
                "source_name": "Beechey 2010"
            }, {
                "url": "http://blog.jpcert.or.jp/2016/01/windows-commands-abused-by-attackers.html",
                "description": "Tomonaga, S. (2016, January 26). Windows Commands Abused by Attackers. Retrieved February 2, 2016.",
                "source_name": "Windows Commands JPCERT"
            }, {
                "url": "https://www.iad.gov/iad/library/ia-guidance/tech-briefs/application-whitelisting-using-microsoft-applocker.cfm",
                "description": "NSA Information Assurance Directorate. (2014, August). Application Whitelisting Using Microsoft AppLocker. Retrieved March 31, 2016.",
                "source_name": "NSA MS AppLocker"
            }, {
                "url": "http://technet.microsoft.com/en-us/magazine/2008.06.srp.aspx",
                "description": "Corio, C., \u0026 Sayana, D. P. (2008, June). Application Lockdown with Software Restriction Policies. Retrieved November 18, 2014.",
                "source_name": "Corio 2008"
            }, {
                "url": "https://technet.microsoft.com/en-us/library/ee791851.aspx",
                "description": "Microsoft. (2012, June 27). Using Software Restriction Policies and AppLocker Policies. Retrieved April 7, 2016.",
                "source_name": "TechNet Applocker vs SRP"
            }]
        },
        "__v": 0
    },
    {
        "_id": "attack-pattern--519630c5-f03f-4882-825c-3af924935817",
        "extendedProperties": {
            "x_mitre_defense_bypassed": ["Anti-virus", "Signature-based detection"],
            "x_mitre_platforms": ["Windows Server 2003", "Windows Server 2008", "Windows Server 2012", "Windows XP", "Windows 7", "Windows 8", "Windows Server 2003 R2", "Windows Server 2008 R2", "Windows Server 2012 R2", "Windows Vista", "Windows 8.1", "Linux", "Windows 10", "MacOS", "OS X"]
        },
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "attack-pattern",
            "id": "attack-pattern--519630c5-f03f-4882-825c-3af924935817",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-05-31T21:30:22.096Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Binary Padding",
            "description": "Some security tools inspect files with static signatures to determine if they are known malicious. Adversaries may add data to files to increase the size beyond what security tools are capable of handling or to change the file hash to avoid hash-based blacklists.\n\nDetection: Depending on the method used to pad files, a file-based signature may be capable of detecting padding using a scanning or on-access based tool. \n\nWhen executed, the resulting process from padded files may also exhibit other behavior characteristics of being used to conduct an intrusion such as system and network information Discovery or Lateral Movement, which could be used as event indicators that point to the source file.\n\nPlatforms: Windows Server 2003, Windows Server 2008, Windows Server 2012, Windows XP, Windows 7, Windows 8, Windows Server 2003 R2, Windows Server 2008 R2, Windows Server 2012 R2, Windows Vista, Windows 8.1, Linux, Windows 10, MacOS, OS X\n\nDefense Bypassed: Anti-virus, Signature-based detection",
            "kill_chain_phases": [{
                "phase_name": "defense-evasion",
                "kill_chain_name": "mitre-attack"
            }],
            "external_references": [{
                "external_id": "T1009",
                "url": "https://attack.mitre.org/wiki/Technique/T1009",
                "source_name": "mitre-attack"
            }],
            "object_marking_refs": ["marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"]
        },
        "__v": 0
    },
    {
        "_id": "course-of-action--96150c35-466f-4f0a-97a9-ae87ee27f751",
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "course-of-action",
            "id": "course-of-action--96150c35-466f-4f0a-97a9-ae87ee27f751",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-12-14T16:55:59.600Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Bootkit Mitigation",
            "description": "Ensure proper permissions are in place to help prevent adversary access to privileged accounts necessary to perform this action. Use Trusted Platform Module technology and a secure or trusted boot process to prevent system integrity from being compromised. (Citation: TCG Trusted Platform Module) (Citation: TechNet Secure Boot Process)",
            "external_references": [{
                "external_id": "T1067",
                "url": "https://attack.mitre.org/wiki/Technique/T1067",
                "source_name": "mitre-attack"
            }, {
                "url": "http://www.trustedcomputinggroup.org/wp-content/uploads/Trusted-Platform-Module-Summary%2004292008.pdf",
                "description": "Trusted Computing Group. (2008, April 29). Trusted Platform Module (TPM) Summary. Retrieved June 8, 2016.",
                "source_name": "TCG Trusted Platform Module"
            }, {
                "url": "https://technet.microsoft.com/en-us/windows/dn168167.aspx",
                "description": "Microsoft. (n.d.). Secure the Windows 8.1 boot process. Retrieved June 11, 2016.",
                "source_name": "TechNet Secure Boot Process"
            }]
        },
        "__v": 0
    },
    {
        "_id": "attack-pattern--02fefddc-fb1b-423f-a76b-7552dd211d4d",
        "extendedProperties": {
            "x_mitre_data_sources": ["API monitoring", "MBR", "VBR"],
            "x_mitre_platforms": ["Linux", "Windows 10", "Windows 7", "Windows 8", "Windows 8.1", "Windows Server 2003", "Windows Server 2003 R2", "Windows Server 2008", "Windows Server 2008 R2", "Windows Server 2012", "Windows Server 2012 R2", "Windows Vista", "Windows XP"],
            "x_mitre_permissions_required": ["Administrator", "SYSTEM"]
        },
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "attack-pattern",
            "id": "attack-pattern--02fefddc-fb1b-423f-a76b-7552dd211d4d",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-05-31T21:30:54.661Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Bootkit",
            "description": "A bootkit is a malware variant that modifies the boot sectors of a hard drive, including the Master Boot Record (MBR) and Volume Boot Record (VBR). (Citation: MTrends 2016)\n\nAdversaries may use bootkits to persist on systems at a layer below the operating system, which may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.\n\n===Master Boot Record===\nThe MBR is the section of disk that is first loaded after completing hardware initialization by the BIOS. It is the location of the boot loader. An adversary who has raw access to the boot drive may overwrite this area, diverting execution during startup from the normal boot loader to adversary code. (Citation: Lau 2011)\n\n===Volume Boot Record===\nThe MBR passes control of the boot process to the VBR. Similar to the case of MBR, an adversary who has raw access to the boot drive may overwrite the VBR to divert execution during startup to adversary code.\n\nDetection: Perform integrity checking on MBR and VBR. Take snapshots of MBR and VBR and compare against known good samples. Report changes to MBR and VBR as they occur for indicators of suspicious activity and further analysis.\n\nPlatforms: Linux, Windows 10, Windows 7, Windows 8, Windows 8.1, Windows Server 2003, Windows Server 2003 R2, Windows Server 2008, Windows Server 2008 R2, Windows Server 2012, Windows Server 2012 R2, Windows Vista, Windows XP\n\nData Sources: API monitoring, MBR, VBR\n\nPermissions Required: Administrator, SYSTEM",
            "kill_chain_phases": [{
                "phase_name": "persistence",
                "kill_chain_name": "mitre-attack"
            }],
            "external_references": [{
                "external_id": "T1067",
                "url": "https://attack.mitre.org/wiki/Technique/T1067",
                "source_name": "mitre-attack"
            }, {
                "url": "http://www.symantec.com/connect/blogs/are-mbr-infections-back-fashion",
                "description": "Lau, H. (2011, August 8). Are MBR Infections Back in Fashion? (Infographic). Retrieved November 13, 2014.",
                "source_name": "Lau 2011"
            }, {
                "url": "https://www.fireeye.com/content/dam/fireeye-www/regional/fr%20FR/offers/pdfs/ig-mtrends-2016.pdf",
                "description": "Mandiant. (2016, February). M-Trends 2016. Retrieved January 4, 2017.",
                "source_name": "MTrends 2016"
            }],
            "object_marking_refs": ["marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"]
        },
        "__v": 0
    },
    {
        "_id": "course-of-action--4a99fecc-680b-448e-8fe7-8144c60d272c",
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "course-of-action",
            "id": "course-of-action--4a99fecc-680b-448e-8fe7-8144c60d272c",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-12-14T16:55:59.600Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Brute Force Mitigation",
            "description": "Set account lockout policies after a certain number of failed login attempts to prevent passwords from being guessed. Use multifactor authentication. Follow best practices for mitigating access to Valid Accounts",
            "external_references": [{
                "external_id": "T1110",
                "url": "https://attack.mitre.org/wiki/Technique/T1110",
                "source_name": "mitre-attack"
            }]
        },
        "__v": 0
    },
    {
        "_id": "attack-pattern--a93494bb-4b80-4ea1-8695-3236a49916fd",
        "extendedProperties": {
            "x_mitre_contributors": ["John Strand"],
            "x_mitre_data_sources": ["Authentication logs"],
            "x_mitre_permissions_required": ["User"],
            "x_mitre_platforms": ["Windows Server 2003", "Windows Server 2008", "Windows Server 2012", "Windows XP", "Windows 7", "Windows 8", "Windows Server 2003 R2", "Windows Server 2008 R2", "Windows Server 2012 R2", "Windows Vista", "Windows 8.1", "Linux", "Windows 10", "MacOS", "OS X"]
        },
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "attack-pattern",
            "id": "attack-pattern--a93494bb-4b80-4ea1-8695-3236a49916fd",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-05-31T21:31:22.767Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Brute Force",
            "description": "Adversaries may use brute force techniques to attempt access to accounts when passwords are unknown or when password hashes are obtained.\n\nCredential Dumping to obtain password hashes may only get an adversary so far when Pass the Hash is not an option. Techniques to systematically guess the passwords used to compute hashes are available, or the adversary may use a pre-computed rainbow table. Cracking hashes is usually done on adversary-controlled systems outside of the target network. (Citation: Wikipedia Password cracking)\n\nAdversaries may attempt to brute force logins without knowledge of passwords or hashes during an operation either with zero knowledge or by attempting a list of known or possible passwords. This is a riskier option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nA related technique called password spraying uses one password, or a small list of passwords, that matches the complexity policy of the domain and may be a commonly used password. Logins are attempted with that password and many different accounts on a network to avoid account lockouts that would normally occur when brute forcing a single account with many passwords. (Citation: BlackHillsInfosec Password Spraying)\n\nDetection: It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. \n\nMonitor authentication logs for system and application login failures of Valid Accounts. If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.\n\nAlso monitor for many failed authentication attempts across various accounts that may result from password spraying attempts.\n\nPlatforms: Windows Server 2003, Windows Server 2008, Windows Server 2012, Windows XP, Windows 7, Windows 8, Windows Server 2003 R2, Windows Server 2008 R2, Windows Server 2012 R2, Windows Vista, Windows 8.1, Linux, Windows 10, MacOS, OS X\n\nData Sources: Authentication logs\n\nPermissions Required: User\n\nContributors: John Strand",
            "kill_chain_phases": [{
                "phase_name": "credential-access",
                "kill_chain_name": "mitre-attack"
            }],
            "external_references": [{
                "external_id": "T1110",
                "url": "https://attack.mitre.org/wiki/Technique/T1110",
                "source_name": "mitre-attack"
            }, {
                "url": "https://en.wikipedia.org/wiki/Password%20cracking",
                "description": "Wikipedia. (n.d.). Password cracking. Retrieved December 23, 2015.",
                "source_name": "Wikipedia Password cracking"
            }, {
                "url": "https://www.cylance.com/content/dam/cylance/pages/operation-cleaver/Cylance%20Operation%20Cleaver%20Report.pdf",
                "description": "Cylance. (2014, December). Operation Cleaver. Retrieved September 14, 2017.",
                "source_name": "Cylance Cleaver"
            }, {
                "url": "http://www.blackhillsinfosec.com/?p=4645",
                "description": "Thyer, J. (2015, October 30). Password Spraying \u0026 Other Fun with RPCCLIENT. Retrieved April 25, 2017.",
                "source_name": "BlackHillsInfosec Password Spraying"
            }],
            "object_marking_refs": ["marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"]
        },
        "__v": 0
    },
    {
        "_id": "course-of-action--beb45abb-11e8-4aef-9778-1f9ac249784f",
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "course-of-action",
            "id": "course-of-action--beb45abb-11e8-4aef-9778-1f9ac249784f",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-12-14T16:55:59.600Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Bypass User Account Control Mitigation",
            "description": "Remove users from the local administrator group on systems. Although UAC bypass techniques exist, it is still prudent to use the highest enforcement level for UAC when possible and mitigate bypass opportunities that exist with techniques such as DLL Search Order Hijacking. \n\nCheck for common UAC bypass weaknesses on Windows systems to be aware of the risk posture and address issues where appropriate. (Citation: Github UACMe)",
            "external_references": [{
                "external_id": "T1088",
                "url": "https://attack.mitre.org/wiki/Technique/T1088",
                "source_name": "mitre-attack"
            }, {
                "url": "https://github.com/hfiref0x/UACME",
                "description": "UACME Project. (2016, June 16). UACMe. Retrieved July 26, 2016.",
                "source_name": "Github UACMe"
            }]
        },
        "__v": 0
    },
    {
        "_id": "attack-pattern--ca1a3f50-5ebd-41f8-8320-2c7d6a6e88be",
        "extendedProperties": {
            "x_mitre_contributors": ["Stefan Kanthak", "Casey Smith"],
            "x_mitre_data_sources": ["System calls", "Process monitoring", "Authentication logs", "Process command-line parameters"],
            "x_mitre_permissions_required": ["User", "Administrator"],
            "x_mitre_effective_permissions": ["Administrator"],
            "x_mitre_defense_bypassed": ["Windows User Account Control"],
            "x_mitre_platforms": ["Windows Server 2012", "Windows 7", "Windows 8", "Windows Server 2008 R2", "Windows Server 2012 R2", "Windows 8.1", "Windows 10"]
        },
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "attack-pattern",
            "id": "attack-pattern--ca1a3f50-5ebd-41f8-8320-2c7d6a6e88be",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-05-31T21:31:07.462Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Bypass User Account Control",
            "description": "Windows User Account Control (UAC) allows a program to elevate its privileges to perform a task under administrator-level permissions by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action. (Citation: TechNet How UAC Works)\n\nIf the UAC protection level of a computer is set to anything but the highest level, certain Windows programs are allowed to elevate privileges or execute some elevated COM objects without prompting the user through the UAC notification box. (Citation: TechNet Inside UAC) (Citation: MSDN COM Elevation) An example of this is use of rundll32.exe to load a specifically crafted DLL which loads an auto-elevated COM object and performs a file operation in a protected directory which would typically require elevated access. Malicious software may also be injected into a trusted process to gain elevated privileges without prompting a user. (Citation: Davidson Windows) Adversaries can use these techniques to elevate privileges to administrator if the target process is unprotected.\n\nMany methods have been discovered to bypass UAC. The Github readme page for UACMe contains an extensive list of methods (Citation: Github UACMe) that have been discovered and implemented within UACMe, but may not be a comprehensive list of bypasses. Additional bypass methods are regularly discovered and some used in the wild, such as:\n\n* \u003ccode\u003eeventvwr.exe\u003c/code\u003e can auto-elevate and execute a specified binary or script. (Citation: enigma0x3 Fileless UAC Bypass) (Citation: Fortinet Fareit)\n\nAnother bypass is possible through some Lateral Movement techniques if credentials for an account with administrator privileges are known, since UAC is a single system security mechanism, and the privilege or integrity of a process running on one system will be unknown on lateral systems and default to high integrity. (Citation: SANS UAC Bypass)\n\nDetection: There are many ways to perform UAC bypasses when a user is in the local administrator group on a system, so it may be difficult to target detection on all variations. Efforts should likely be placed on mitigation and collecting enough information on process launches and actions that could be performed before and after a UAC bypass is performed. Monitor process API calls for behavior that may be indicative of DLL Injection and unusual loaded DLLs through DLL Search Order Hijacking, which indicate attempts to gain access to higher privileged processes.\n\nSome UAC bypass methods rely on modifying specific, user-accessible Registry settings.  For example:\n\n* The \u003ccode\u003eeventvwr.exe\u003c/code\u003e bypass uses the \u003ccode\u003e[HKEY_CURRENT_USER]\\Software\\Classes\\mscfile\\shell\\open\\command\u003c/code\u003e Registry key. (Citation: enigma0x3 Fileless UAC Bypass)\n* The \u003ccode\u003esdclt.exe\u003c/code\u003e bypass uses the \u003ccode\u003e[HKEY_CURRENT_USER]\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\control.exe\u003c/code\u003e and \u003ccode\u003e[HKEY_CURRENT_USER]\\Software\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand\u003c/code\u003e Registry keys. (Citation: enigma0x3 sdclt app paths) (Citation: enigma0x3 sdclt bypass)\n\nAnalysts should monitor these Registry settings for unauthorized changes.\n\nPlatforms: Windows Server 2012, Windows 7, Windows 8, Windows Server 2008 R2, Windows Server 2012 R2, Windows 8.1, Windows 10\n\nData Sources: System calls, Process monitoring, Authentication logs, Process command-line parameters\n\nEffective Permissions: Administrator\n\nDefense Bypassed: Windows User Account Control\n\nPermissions Required: User, Administrator\n\nContributors: Stefan Kanthak, Casey Smith",
            "kill_chain_phases": [{
                "phase_name": "defense-evasion",
                "kill_chain_name": "mitre-attack"
            }, {
                "phase_name": "privilege-escalation",
                "kill_chain_name": "mitre-attack"
            }],
            "external_references": [{
                "external_id": "T1088",
                "url": "https://attack.mitre.org/wiki/Technique/T1088",
                "source_name": "mitre-attack"
            }, {
                "url": "https://technet.microsoft.com/en-us/itpro/windows/keep-secure/how-user-account-control-works",
                "description": "Lich, B. (2016, May 31). How User Account Control Works. Retrieved June 3, 2016.",
                "source_name": "TechNet How UAC Works"
            }, {
                "url": "https://technet.microsoft.com/en-US/magazine/2009.07.uac.aspx",
                "description": "Russinovich, M. (2009, July). User Account Control: Inside Windows 7 User Account Control. Retrieved July 26, 2016.",
                "source_name": "TechNet Inside UAC"
            }, {
                "url": "https://msdn.microsoft.com/en-us/library/ms679687.aspx",
                "description": "Microsoft. (n.d.). The COM Elevation Moniker. Retrieved July 26, 2016.",
                "source_name": "MSDN COM Elevation"
            }, {
                "url": "http://www.pretentiousname.com/misc/win7%20uac%20whitelist2.html",
                "description": "Davidson, L. (n.d.). Windows 7 UAC whitelist. Retrieved November 12, 2014.",
                "source_name": "Davidson Windows"
            }, {
                "url": "https://github.com/hfiref0x/UACME",
                "description": "UACME Project. (2016, June 16). UACMe. Retrieved July 26, 2016.",
                "source_name": "Github UACMe"
            }, {
                "url": "https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking/",
                "description": "Nelson, M. (2016, August 15). \"Fileless\" UAC Bypass using eventvwr.exe and Registry Hijacking. Retrieved December 27, 2016.",
                "source_name": "enigma0x3 Fileless UAC Bypass"
            }, {
                "url": "https://blog.fortinet.com/2016/12/16/malicious-macro-bypasses-uac-to-elevate-privilege-for-fareit-malware",
                "description": "Salvio, J., Joven, R. (2016, December 16). Malicious Macro Bypasses UAC to Elevate Privilege for Fareit Malware. Retrieved December 27, 2016.",
                "source_name": "Fortinet Fareit"
            }, {
                "url": "http://pen-testing.sans.org/blog/pen-testing/2013/08/08/psexec-uac-bypass",
                "description": "Medin, T. (2013, August 8). PsExec UAC Bypass. Retrieved June 3, 2016.",
                "source_name": "SANS UAC Bypass"
            }, {
                "url": "https://enigma0x3.net/2017/03/14/bypassing-uac-using-app-paths/",
                "description": "Nelson, M. (2017, March 14). Bypassing UAC using App Paths. Retrieved May 25, 2017.",
                "source_name": "enigma0x3 sdclt app paths"
            }, {
                "url": "https://enigma0x3.net/2017/03/17/fileless-uac-bypass-using-sdclt-exe/",
                "description": "Nelson, M. (2017, March 17). \"Fileless\" UAC Bypass Using sdclt.exe. Retrieved May 25, 2017.",
                "source_name": "enigma0x3 sdclt bypass"
            }],
            "object_marking_refs": ["marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"]
        },
        "__v": 0
    },
    {
        "_id": "course-of-action--d7c49196-b40e-42bc-8eed-b803113692ed",
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "course-of-action",
            "id": "course-of-action--d7c49196-b40e-42bc-8eed-b803113692ed",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-12-14T16:55:59.600Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Change Default File Association Mitigation",
            "description": "Direct mitigation of this technique is not recommended since it is a legitimate function that can be performed by users for software preferences. Follow Microsoft's best practices for file associations. (Citation: MSDN File Associations)\n\nIdentify and block potentially malicious software that may be executed by this technique using whitelisting (Citation: Beechey 2010) tools, like AppLocker, (Citation: Windows Commands JPCERT) (Citation: NSA MS AppLocker) or Software Restriction Policies (Citation: Corio 2008) where appropriate. (Citation: TechNet Applocker vs SRP)",
            "external_references": [{
                "external_id": "T1042",
                "url": "https://attack.mitre.org/wiki/Technique/T1042",
                "source_name": "mitre-attack"
            }, {
                "url": "https://msdn.microsoft.com/en-us/library/cc144156.aspx",
                "description": "Microsoft. (n.d.).  Retrieved July 26, 2016.",
                "source_name": "MSDN File Associations"
            }, {
                "url": "http://www.sans.org/reading-room/whitepapers/application/application-whitelisting-panacea-propaganda-33599",
                "description": "Beechey, J. (2010, December). Application Whitelisting: Panacea or Propaganda?. Retrieved November 18, 2014.",
                "source_name": "Beechey 2010"
            }, {
                "url": "http://blog.jpcert.or.jp/2016/01/windows-commands-abused-by-attackers.html",
                "description": "Tomonaga, S. (2016, January 26). Windows Commands Abused by Attackers. Retrieved February 2, 2016.",
                "source_name": "Windows Commands JPCERT"
            }, {
                "url": "https://www.iad.gov/iad/library/ia-guidance/tech-briefs/application-whitelisting-using-microsoft-applocker.cfm",
                "description": "NSA Information Assurance Directorate. (2014, August). Application Whitelisting Using Microsoft AppLocker. Retrieved March 31, 2016.",
                "source_name": "NSA MS AppLocker"
            }, {
                "url": "http://technet.microsoft.com/en-us/magazine/2008.06.srp.aspx",
                "description": "Corio, C., \u0026 Sayana, D. P. (2008, June). Application Lockdown with Software Restriction Policies. Retrieved November 18, 2014.",
                "source_name": "Corio 2008"
            }, {
                "url": "https://technet.microsoft.com/en-us/library/ee791851.aspx",
                "description": "Microsoft. (2012, June 27). Using Software Restriction Policies and AppLocker Policies. Retrieved April 7, 2016.",
                "source_name": "TechNet Applocker vs SRP"
            }]
        },
        "__v": 0
    },
    {
        "_id": "attack-pattern--68c96494-1a50-403e-8844-69a6af278c68",
        "extendedProperties": {
            "x_mitre_contributors": ["Stefan Kanthak"],
            "x_mitre_data_sources": ["Windows Registry", "Process command-line parameters", "Process monitoring"],
            "x_mitre_permissions_required": ["User", "Administrator", "SYSTEM"],
            "x_mitre_platforms": ["Windows Server 2003", "Windows Server 2008", "Windows Server 2012", "Windows XP", "Windows 7", "Windows 8", "Windows Server 2003 R2", "Windows Server 2008 R2", "Windows Server 2012 R2", "Windows Vista", "Windows 8.1", "Windows 10"]
        },
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "attack-pattern",
            "id": "attack-pattern--68c96494-1a50-403e-8844-69a6af278c68",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-05-31T21:30:42.222Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Change Default File Association",
            "description": "When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access. (Citation: Microsoft Change Default Programs) (Citation: Microsoft File Handlers) Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened.\n\nDetection: Collect and analyze changes to Registry keys that associate file extensions to default applications for execution and correlate with unknown process launch activity or unusual file types for that process. \n\nUser file association preferences are stored under \u003ccode\u003e [HKEY_CURRENT_USER]\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\u003c/code\u003e and override associations configured under \u003ccode\u003e[HKEY_CLASSES_ROOT]\u003c/code\u003e. Changes to a user's preference will occur under this entry's subkeys.\n\nAlso look for abnormal process call trees for execution of other commands that could relate to Discovery actions or other techniques.\n\nPlatforms: Windows Server 2003, Windows Server 2008, Windows Server 2012, Windows XP, Windows 7, Windows 8, Windows Server 2003 R2, Windows Server 2008 R2, Windows Server 2012 R2, Windows Vista, Windows 8.1, Windows 10\n\nData Sources: Windows Registry, Process command-line parameters, Process monitoring\n\nPermissions Required: User, Administrator, SYSTEM\n\nContributors: Stefan Kanthak",
            "kill_chain_phases": [{
                "phase_name": "persistence",
                "kill_chain_name": "mitre-attack"
            }],
            "external_references": [{
                "external_id": "T1042",
                "url": "https://attack.mitre.org/wiki/Technique/T1042",
                "source_name": "mitre-attack"
            }, {
                "url": "https://support.microsoft.com/en-us/help/18539/windows-7-change-default-programs",
                "description": "Microsoft. (n.d.). Change which programs Windows 7 uses by default. Retrieved July 26, 2016.",
                "source_name": "Microsoft Change Default Programs"
            }, {
                "url": "http://msdn.microsoft.com/en-us/library/bb166549.aspx",
                "description": "Microsoft. (n.d.). Specifying File Handlers for File Name Extensions. Retrieved November 13, 2014.",
                "source_name": "Microsoft File Handlers"
            }],
            "object_marking_refs": ["marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"]
        },
        "__v": 0
    },
    {
        "_id": "attack-pattern--d3046a90-580c-4004-8208-66915bc29830",
        "extendedProperties": {
            "x_mitre_data_sources": ["Authentication logs", "File monitoring"],
            "x_mitre_defense_bypassed": ["Log analysis", "Host forensic analysis"],
            "x_mitre_permissions_required": ["User"],
            "x_mitre_platforms": ["Linux", "MacOS", "OS X"]
        },
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "attack-pattern",
            "id": "attack-pattern--d3046a90-580c-4004-8208-66915bc29830",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-12-14T16:46:06.044Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Clear Command History",
            "description": "macOS and Linux both keep track of the commands users type in their terminal so that users can easily remember what they've done. These logs can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable \u003ccode\u003eHISTFILE\u003c/code\u003e. When a user logs off a system, this information is flushed to a file in the user's home directory called \u003ccode\u003e~/.bash_history\u003c/code\u003e. The benefit of this is that it allows users to go back to commands they've used before in different sessions. Since everything typed on the command-line is saved, passwords passed in on the command line are also saved. Adversaries can abuse this by searching these files for cleartext passwords. Additionally, adversaries can use a variety of methods to prevent their own commands from appear in these logs such as \u003ccode\u003eunset HISTFILE\u003c/code\u003e, \u003ccode\u003eexport HISTFILESIZE=0\u003c/code\u003e, \u003ccode\u003ehistory -c\u003c/code\u003e, \u003ccode\u003erm ~/.bash_history\u003c/code\u003e.\n\nDetection: User authentication, especially via remote terminal services like SSH, without new entries in that user's \u003ccode\u003e~/.bash_history\u003c/code\u003e is suspicious. Additionally, the modification of the HISTFILE and HISTFILESIZE environment variables or the removal/clearing of the \u003ccode\u003e~/.bash_history\u003c/code\u003e file are indicators of suspicious activity.\n\nPlatforms: Linux, MacOS, OS X\n\nData Sources: Authentication logs, File monitoring\n\nDefense Bypassed: Log analysis, Host forensic analysis\n\nPermissions Required: User",
            "kill_chain_phases": [{
                "phase_name": "defense-evasion",
                "kill_chain_name": "mitre-attack"
            }],
            "external_references": [{
                "external_id": "T1146",
                "url": "https://attack.mitre.org/wiki/Technique/T1146",
                "source_name": "mitre-attack"
            }],
            "object_marking_refs": ["marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"]
        },
        "__v": 0
    },
    {
        "_id": "course-of-action--3e7018e9-7389-48e7-9208-0bdbcbba9483",
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "course-of-action",
            "id": "course-of-action--3e7018e9-7389-48e7-9208-0bdbcbba9483",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-12-14T16:55:59.600Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Clear Command History Mitigation",
            "description": "Preventing users from deleting or writing to certain files can stop adversaries from maliciously altering their \u003ccode\u003e~/.bash_history\u003c/code\u003e files. Additionally, making these environment variables readonly can make sure that the history is preserved   (Citation: Securing bash history).",
            "external_references": [{
                "external_id": "T1146",
                "url": "https://attack.mitre.org/wiki/Technique/T1146",
                "source_name": "mitre-attack"
            }, {
                "description": "Mathew Branwell. (2012, March 21). Securing .bash_history file. Retrieved July 8, 2017.",
                "source_name": "Securing bash history"
            }]
        },
        "__v": 0
    },
    {
        "_id": "course-of-action--19edfa02-1a5f-47e4-ad82-3288f57f64cf",
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "course-of-action",
            "id": "course-of-action--19edfa02-1a5f-47e4-ad82-3288f57f64cf",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-12-14T16:55:59.600Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Clipboard Data Mitigation",
            "description": "Instead of blocking software based on clipboard capture behavior, identify potentially malicious software that may contain this functionality, and audit and/or block it by using whitelisting (Citation: Beechey 2010) tools, like AppLocker, (Citation: Windows Commands JPCERT) (Citation: NSA MS AppLocker) or Software Restriction Policies (Citation: Corio 2008) where appropriate. (Citation: TechNet Applocker vs SRP)",
            "external_references": [{
                "external_id": "T1115",
                "url": "https://attack.mitre.org/wiki/Technique/T1115",
                "source_name": "mitre-attack"
            }, {
                "url": "http://www.sans.org/reading-room/whitepapers/application/application-whitelisting-panacea-propaganda-33599",
                "description": "Beechey, J. (2010, December). Application Whitelisting: Panacea or Propaganda?. Retrieved November 18, 2014.",
                "source_name": "Beechey 2010"
            }, {
                "url": "http://blog.jpcert.or.jp/2016/01/windows-commands-abused-by-attackers.html",
                "description": "Tomonaga, S. (2016, January 26). Windows Commands Abused by Attackers. Retrieved February 2, 2016.",
                "source_name": "Windows Commands JPCERT"
            }, {
                "url": "https://www.iad.gov/iad/library/ia-guidance/tech-briefs/application-whitelisting-using-microsoft-applocker.cfm",
                "description": "NSA Information Assurance Directorate. (2014, August). Application Whitelisting Using Microsoft AppLocker. Retrieved March 31, 2016.",
                "source_name": "NSA MS AppLocker"
            }, {
                "url": "http://technet.microsoft.com/en-us/magazine/2008.06.srp.aspx",
                "description": "Corio, C., \u0026 Sayana, D. P. (2008, June). Application Lockdown with Software Restriction Policies. Retrieved November 18, 2014.",
                "source_name": "Corio 2008"
            }, {
                "url": "https://technet.microsoft.com/en-us/library/ee791851.aspx",
                "description": "Microsoft. (2012, June 27). Using Software Restriction Policies and AppLocker Policies. Retrieved April 7, 2016.",
                "source_name": "TechNet Applocker vs SRP"
            }]
        },
        "__v": 0
    },
    {
        "_id": "attack-pattern--30973a08-aed9-4edf-8604-9084ce1b5c4f",
        "extendedProperties": {
            "x_mitre_data_sources": ["API monitoring"],
            "x_mitre_platforms": ["Windows Server 2003", "Windows Server 2008", "Windows Server 2012", "Windows XP", "Windows 7", "Windows 8", "Windows Server 2003 R2", "Windows Server 2008 R2", "Windows Server 2012 R2", "Windows Vista", "Windows 8.1", "Linux", "Windows 10", "MacOS", "OS X"]
        },
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "attack-pattern",
            "id": "attack-pattern--30973a08-aed9-4edf-8604-9084ce1b5c4f",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-05-31T21:31:25.967Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Clipboard Data",
            "description": "Adversaries may collect data stored in the Windows clipboard from users copying information within or between applications. \n\n===Windows===\n\nApplications can access clipboard data by using the Windows API. (Citation: MSDN Clipboard) \n\n===Mac===\n\nOSX provides a native command, \u003ccode\u003epbpaste\u003c/code\u003e, to grab clipboard contents  (Citation: Operating with EmPyre).\n\nDetection: Access to the clipboard is a legitimate function of many applications on a Windows system. If an organization chooses to monitor for this behavior, then the data will likely need to be correlated against other suspicious or non-user-driven activity.\n\nPlatforms: Windows Server 2003, Windows Server 2008, Windows Server 2012, Windows XP, Windows 7, Windows 8, Windows Server 2003 R2, Windows Server 2008 R2, Windows Server 2012 R2, Windows Vista, Windows 8.1, Linux, Windows 10, MacOS, OS X\n\nData Sources: API monitoring",
            "kill_chain_phases": [{
                "phase_name": "collection",
                "kill_chain_name": "mitre-attack"
            }],
            "external_references": [{
                "external_id": "T1115",
                "url": "https://attack.mitre.org/wiki/Technique/T1115",
                "source_name": "mitre-attack"
            }, {
                "url": "https://msdn.microsoft.com/en-us/library/ms649012",
                "description": "Microsoft. (n.d.). About the Clipboard. Retrieved March 29, 2016.",
                "source_name": "MSDN Clipboard"
            }, {
                "url": "http://www.rvrsh3ll.net/blog/empyre/operating-with-empyre/",
                "description": "rvrsh3ll. (2016, May 18). Operating with EmPyre. Retrieved July 12, 2017.",
                "source_name": "Operating with EmPyre"
            }],
            "object_marking_refs": ["marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"]
        },
        "__v": 0
    },
    {
        "_id": "course-of-action--82fbc58b-171d-4a2d-9a20-c6b2a716bd08",
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "course-of-action",
            "id": "course-of-action--82fbc58b-171d-4a2d-9a20-c6b2a716bd08",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-12-14T16:55:59.600Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Code Signing Mitigation",
            "description": "Process whitelisting and trusted publishers to verify authenticity of software can help prevent signed malicious or untrusted code from executing on a system. (Citation: NSA MS AppLocker) (Citation: TechNet Trusted Publishers) (Citation: Securelist Digital Certificates)",
            "external_references": [{
                "external_id": "T1116",
                "url": "https://attack.mitre.org/wiki/Technique/T1116",
                "source_name": "mitre-attack"
            }, {
                "url": "https://securelist.com/blog/security-policies/68593/why-you-shouldnt-completely-trust-files-signed-with-digital-certificates/",
                "description": "Ladikov, A. (2015, January 29). Why You Shouldn’t Completely Trust Files Signed with Digital Certificates. Retrieved March 31, 2016.",
                "source_name": "Securelist Digital Certificates"
            }, {
                "url": "https://www.iad.gov/iad/library/ia-guidance/tech-briefs/application-whitelisting-using-microsoft-applocker.cfm",
                "description": "NSA Information Assurance Directorate. (2014, August). Application Whitelisting Using Microsoft AppLocker. Retrieved March 31, 2016.",
                "source_name": "NSA MS AppLocker"
            }, {
                "url": "https://technet.microsoft.com/en-us/library/cc733026.aspx",
                "description": "Microsoft. (n.d.). Manage Trusted Publishers. Retrieved March 31, 2016.",
                "source_name": "TechNet Trusted Publishers"
            }]
        },
        "__v": 0
    },
    {
        "_id": "attack-pattern--1b84d551-6de8-4b96-9930-d177677c3b1d",
        "extendedProperties": {
            "x_mitre_data_sources": ["Binary file metadata"],
            "x_mitre_platforms": ["MacOS", "OS X", "Windows 10", "Windows 7", "Windows 8", "Windows 8.1", "Windows Server 2003", "Windows Server 2003 R2", "Windows Server 2008", "Windows Server 2008 R2", "Windows Server 2012", "Windows Server 2012 R2", "Windows Vista", "Windows XP"],
            "x_mitre_defense_bypassed": ["Windows User Account Control"]
        },
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "attack-pattern",
            "id": "attack-pattern--1b84d551-6de8-4b96-9930-d177677c3b1d",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-05-31T21:31:26.474Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Code Signing",
            "description": "Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. (Citation: Wikipedia Code Signing) However, adversaries are known to use code signing certificates to masquerade malware and tools as legitimate binaries (Citation: Janicab). The certificates used during an operation may be created, forged, or stolen by the adversary. (Citation: Securelist Digital Certificates) (Citation: Symantec Digital Certificates)\n\nCode signing to verify software on first run can be used on modern Windows and MacOS/OS X systems. It is not used on Linux due to the decentralized nature of the platform. (Citation: Wikipedia Code Signing)\n\nCode signing certificates may be used to bypass security policies that require signed code to execute on a system.\n\nDetection: Collect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers.\n\nPlatforms: MacOS, OS X, Windows 10, Windows 7, Windows 8, Windows 8.1, Windows Server 2003, Windows Server 2003 R2, Windows Server 2008, Windows Server 2008 R2, Windows Server 2012, Windows Server 2012 R2, Windows Vista, Windows XP\n\nData Sources: Binary file metadata\n\nDefense Bypassed: Windows User Account Control",
            "kill_chain_phases": [{
                "phase_name": "defense-evasion",
                "kill_chain_name": "mitre-attack"
            }],
            "external_references": [{
                "external_id": "T1116",
                "url": "https://attack.mitre.org/wiki/Technique/T1116",
                "source_name": "mitre-attack"
            }, {
                "url": "https://en.wikipedia.org/wiki/Code%20signing",
                "description": "Wikipedia. (2015, November 10). Code Signing. Retrieved March 31, 2016.",
                "source_name": "Wikipedia Code Signing"
            }, {
                "url": "http://www.thesafemac.com/new-signed-malware-called-janicab/",
                "description": "Thomas. (2013, July 15). New signed malware called Janicab. Retrieved July 17, 2017.",
                "source_name": "Janicab"
            }, {
                "url": "https://securelist.com/blog/security-policies/68593/why-you-shouldnt-completely-trust-files-signed-with-digital-certificates/",
                "description": "Ladikov, A. (2015, January 29). Why You Shouldn’t Completely Trust Files Signed with Digital Certificates. Retrieved March 31, 2016.",
                "source_name": "Securelist Digital Certificates"
            }, {
                "url": "http://www.symantec.com/connect/blogs/how-attackers-steal-private-keys-digital-certificates",
                "description": "Shinotsuka, H. (2013, February 22). How Attackers Steal Private Keys from Digital Certificates. Retrieved March 31, 2016.",
                "source_name": "Symantec Digital Certificates"
            }],
            "object_marking_refs": ["marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"]
        },
        "__v": 0
    },
    {
        "_id": "course-of-action--f28a20fd-d173-4603-807e-2cb3f51bdf04",
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "course-of-action",
            "id": "course-of-action--f28a20fd-d173-4603-807e-2cb3f51bdf04",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-12-14T16:55:59.600Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Command-Line Interface Mitigation",
            "description": "Audit and/or block command-line interpreters by using whitelisting (Citation: Beechey 2010) tools, like AppLocker, (Citation: Windows Commands JPCERT) (Citation: NSA MS AppLocker) or Software Restriction Policies (Citation: Corio 2008) where appropriate. (Citation: TechNet Applocker vs SRP)",
            "external_references": [{
                "external_id": "T1059",
                "url": "https://attack.mitre.org/wiki/Technique/T1059",
                "source_name": "mitre-attack"
            }, {
                "url": "http://www.sans.org/reading-room/whitepapers/application/application-whitelisting-panacea-propaganda-33599",
                "description": "Beechey, J. (2010, December). Application Whitelisting: Panacea or Propaganda?. Retrieved November 18, 2014.",
                "source_name": "Beechey 2010"
            }, {
                "url": "http://blog.jpcert.or.jp/2016/01/windows-commands-abused-by-attackers.html",
                "description": "Tomonaga, S. (2016, January 26). Windows Commands Abused by Attackers. Retrieved February 2, 2016.",
                "source_name": "Windows Commands JPCERT"
            }, {
                "url": "https://www.iad.gov/iad/library/ia-guidance/tech-briefs/application-whitelisting-using-microsoft-applocker.cfm",
                "description": "NSA Information Assurance Directorate. (2014, August). Application Whitelisting Using Microsoft AppLocker. Retrieved March 31, 2016.",
                "source_name": "NSA MS AppLocker"
            }, {
                "url": "http://technet.microsoft.com/en-us/magazine/2008.06.srp.aspx",
                "description": "Corio, C., \u0026 Sayana, D. P. (2008, June). Application Lockdown with Software Restriction Policies. Retrieved November 18, 2014.",
                "source_name": "Corio 2008"
            }, {
                "url": "https://technet.microsoft.com/en-us/library/ee791851.aspx",
                "description": "Microsoft. (2012, June 27). Using Software Restriction Policies and AppLocker Policies. Retrieved April 7, 2016.",
                "source_name": "TechNet Applocker vs SRP"
            }]
        },
        "__v": 0
    },
    {
        "_id": "attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830",
        "extendedProperties": {
            "x_mitre_data_sources": ["Process command-line parameters", "Process monitoring"],
            "x_mitre_permissions_required": ["Administrator", "SYSTEM", "User"],
            "x_mitre_platforms": ["Linux", "MacOS", "OS X", "Windows 10", "Windows 7", "Windows 8", "Windows 8.1", "Windows Server 2003", "Windows Server 2003 R2", "Windows Server 2008", "Windows Server 2008 R2", "Windows Server 2012", "Windows Server 2012 R2", "Windows Vista", "Windows XP"],
            "x_mitre_remote_support": false
        },
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "attack-pattern",
            "id": "attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-05-31T21:30:49.546Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Command-Line Interface",
            "description": "Command-line interfaces provide a way of interacting with computer systems and is a common feature across many types of operating system platforms. (Citation: Wikipedia Command-Line Interface) One example command-line interface on Windows systems is cmd, which can be used to perform a number of tasks including execution of other software. Command-line interfaces can be interacted with locally or remotely via a remote desktop application, reverse shell session, etc. Commands that are executed run with the current permission level of the command-line interface process unless the command includes process invocation that changes permissions context for that execution (e.g. Scheduled Task).\n\nAdversaries may use command-line interfaces to interact with systems and execute other software during the course of an operation.\n\nDetection: Command-line interface activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools.\n\nPlatforms: Linux, MacOS, OS X, Windows 10, Windows 7, Windows 8, Windows 8.1, Windows Server 2003, Windows Server 2003 R2, Windows Server 2008, Windows Server 2008 R2, Windows Server 2012, Windows Server 2012 R2, Windows Vista, Windows XP\n\nData Sources: Process command-line parameters, Process monitoring\n\nPermissions Required: Administrator, SYSTEM, User\n\nRemote Support: No",
            "kill_chain_phases": [{
                "phase_name": "execution",
                "kill_chain_name": "mitre-attack"
            }],
            "external_references": [{
                "external_id": "T1059",
                "url": "https://attack.mitre.org/wiki/Technique/T1059",
                "source_name": "mitre-attack"
            }, {
                "url": "https://en.wikipedia.org/wiki/Command-line%20interface",
                "description": "Wikipedia. (2016, June 26). Command-line interface. Retrieved June 27, 2016.",
                "source_name": "Wikipedia Command-Line Interface"
            }],
            "object_marking_refs": ["marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"]
        },
        "__v": 0
    },
    {
        "_id": "course-of-action--7c1796c7-9fc3-4c3e-9416-527295bf5d95",
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "course-of-action",
            "id": "course-of-action--7c1796c7-9fc3-4c3e-9416-527295bf5d95",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-12-14T16:55:59.600Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Commonly Used Port Mitigation",
            "description": "Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools. (Citation: University of Birmingham C2)",
            "external_references": [{
                "external_id": "T1043",
                "url": "https://attack.mitre.org/wiki/Technique/T1043",
                "source_name": "mitre-attack"
            }, {
                "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf",
                "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command \u0026 Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                "source_name": "University of Birmingham C2"
            }]
        },
        "__v": 0
    },
    {
        "_id": "attack-pattern--f879d51c-5476-431c-aedf-f14d207e4d1e",
        "extendedProperties": {
            "x_mitre_data_sources": ["Packet capture", "Netflow/Enclave netflow", "Process use of network", "Process monitoring"],
            "x_mitre_network_requirements": true,
            "x_mitre_platforms": ["Windows Server 2003", "Windows Server 2008", "Windows Server 2012", "Windows XP", "Windows 7", "Windows 8", "Windows Server 2003 R2", "Windows Server 2008 R2", "Windows Server 2012 R2", "Windows Vista", "Windows 8.1", "Linux", "Windows 10", "MacOS", "OS X"]
        },
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "attack-pattern",
            "id": "attack-pattern--f879d51c-5476-431c-aedf-f14d207e4d1e",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-05-31T21:30:42.657Z",
            "modified": "2017-12-14T16:55:59.600Z",
            "name": "Commonly Used Port",
            "description": "Adversaries may communicate over a commonly used port to bypass firewalls or network detection systems and to blend with normal network activity to avoid more detailed inspection. They may use commonly open ports such as\n* TCP:80 (HTTP)\n* TCP:443 (HTTPS)\n* TCP:25 (SMTP)\n* TCP/UDP:53 (DNS)\n\nThey may use the protocol associated with the port or a completely different protocol. \n\nFor connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), examples of common ports are \n* TCP/UDP:135 (RPC)\n* TCP/UDP:22 (SSH)\n* TCP/UDP:3389 (RDP)\n\nDetection: Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)\n\nPlatforms: Windows Server 2003, Windows Server 2008, Windows Server 2012, Windows XP, Windows 7, Windows 8, Windows Server 2003 R2, Windows Server 2008 R2, Windows Server 2012 R2, Windows Vista, Windows 8.1, Linux, Windows 10, MacOS, OS X\n\nData Sources: Packet capture, Netflow/Enclave netflow, Process use of network, Process monitoring\n\nRequires Network: Yes",
            "kill_chain_phases": [{
                "phase_name": "command-and-control",
                "kill_chain_name": "mitre-attack"
            }],
            "external_references": [{
                "external_id": "T1043",
                "url": "https://attack.mitre.org/wiki/Technique/T1043",
                "source_name": "mitre-attack"
            }, {
                "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf",
                "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command \u0026 Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                "source_name": "University of Birmingham C2"
            }],
            "object_marking_refs": ["marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"]
        },
        "__v": 0
    },
    {
        "_id": "course-of-action--7c1796c7-9fc3-4c3e-9416-527295bf5d96",
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "course-of-action",
            "id": "course-of-action--7c1796c7-9fc3-4c3e-9416-527295bf5d95",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-12-14T16:55:59.600Z",
            "modified": "2017-12-15T16:55:59.600Z",
            "name": "Commonly Used Port Mitigation",
            "description": "Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools. (Citation: University of Birmingham C2)",
            "external_references": [{
                "external_id": "T1043",
                "url": "https://attack.mitre.org/wiki/Technique/T1043",
                "source_name": "mitre-attack"
            }, {
                "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf",
                "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command \u0026 Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                "source_name": "University of Birmingham C2"
            }]
        },
        "__v": 0
    },
    {
        "_id": "attack-pattern--f879d51c-5476-431c-aedf-f14d207e4d1f",
        "extendedProperties": {
            "x_mitre_data_sources": ["Packet capture", "Netflow/Enclave netflow", "Process use of network", "Process monitoring"],
            "x_mitre_network_requirements": true,
            "x_mitre_platforms": ["Windows Server 2003", "Windows Server 2008", "Windows Server 2012", "Windows XP", "Windows 7", "Windows 8", "Windows Server 2003 R2", "Windows Server 2008 R2", "Windows Server 2012 R2", "Windows Vista", "Windows 8.1", "Linux", "Windows 10", "MacOS", "OS X"]
        },
        "metaProperties": {
            "collection": ["95ecc380-afe9-11e4-9b6c-751b66dd541e"]
        },
        "stix": {
            "type": "attack-pattern",
            "id": "attack-pattern--f879d51c-5476-431c-aedf-f14d207e4d1e",
            "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
            "created": "2017-05-31T21:30:42.657Z",
            "modified": "2017-12-15T16:55:59.600Z",
            "name": "Commonly Used Port",
            "description": "Adversaries may communicate over a commonly used port to bypass firewalls or network detection systems and to blend with normal network activity to avoid more detailed inspection. They may use commonly open ports such as\n* TCP:80 (HTTP)\n* TCP:443 (HTTPS)\n* TCP:25 (SMTP)\n* TCP/UDP:53 (DNS)\n\nThey may use the protocol associated with the port or a completely different protocol. \n\nFor connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), examples of common ports are \n* TCP/UDP:135 (RPC)\n* TCP/UDP:22 (SSH)\n* TCP/UDP:3389 (RDP)\n\nDetection: Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)\n\nPlatforms: Windows Server 2003, Windows Server 2008, Windows Server 2012, Windows XP, Windows 7, Windows 8, Windows Server 2003 R2, Windows Server 2008 R2, Windows Server 2012 R2, Windows Vista, Windows 8.1, Linux, Windows 10, MacOS, OS X\n\nData Sources: Packet capture, Netflow/Enclave netflow, Process use of network, Process monitoring\n\nRequires Network: Yes",
            "kill_chain_phases": [{
                "phase_name": "command-and-control",
                "kill_chain_name": "mitre-attack"
            }],
            "external_references": [{
                "external_id": "T1043",
                "url": "https://attack.mitre.org/wiki/Technique/T1043",
                "source_name": "mitre-attack"
            }, {
                "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf",
                "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command \u0026 Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
                "source_name": "University of Birmingham C2"
            }],
            "object_marking_refs": ["marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"]
        },
        "__v": 0
    }
]